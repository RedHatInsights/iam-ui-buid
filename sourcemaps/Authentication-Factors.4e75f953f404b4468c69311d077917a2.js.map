{"version":3,"file":"js/Authentication-Factors.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-styles/css/components/Divider/divider.mjs","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Divider/Divider.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Form/ActionGroup.js","webpack:///./src/Components/DisabledPage/disabled-page.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon.js","webpack:///./src/Apps/TwoFactorCheck/two-factor-check.tsx","webpack:///./src/Components/NonAdminUser/non-admin-user.tsx","webpack:///./src/Routes/AuthenticationPolicy/authentication-factors.tsx","webpack:///./src/Utils/general-utils.ts"],"sourcesContent":["import './divider.css';\nexport default {\n  \"divider\": \"pf-v5-c-divider\",\n  \"modifiers\": {\n    \"hidden\": \"pf-m-hidden\",\n    \"hiddenOnSm\": \"pf-m-hidden-on-sm\",\n    \"visibleOnSm\": \"pf-m-visible-on-sm\",\n    \"hiddenOnMd\": \"pf-m-hidden-on-md\",\n    \"visibleOnMd\": \"pf-m-visible-on-md\",\n    \"hiddenOnLg\": \"pf-m-hidden-on-lg\",\n    \"visibleOnLg\": \"pf-m-visible-on-lg\",\n    \"hiddenOnXl\": \"pf-m-hidden-on-xl\",\n    \"visibleOnXl\": \"pf-m-visible-on-xl\",\n    \"hiddenOn_2xl\": \"pf-m-hidden-on-2xl\",\n    \"visibleOn_2xl\": \"pf-m-visible-on-2xl\",\n    \"vertical\": \"pf-m-vertical\",\n    \"insetNone\": \"pf-m-inset-none\",\n    \"insetXs\": \"pf-m-inset-xs\",\n    \"insetSm\": \"pf-m-inset-sm\",\n    \"insetMd\": \"pf-m-inset-md\",\n    \"insetLg\": \"pf-m-inset-lg\",\n    \"insetXl\": \"pf-m-inset-xl\",\n    \"inset_2xl\": \"pf-m-inset-2xl\",\n    \"inset_3xl\": \"pf-m-inset-3xl\",\n    \"horizontalOnSm\": \"pf-m-horizontal-on-sm\",\n    \"verticalOnSm\": \"pf-m-vertical-on-sm\",\n    \"insetNoneOnSm\": \"pf-m-inset-none-on-sm\",\n    \"insetXsOnSm\": \"pf-m-inset-xs-on-sm\",\n    \"insetSmOnSm\": \"pf-m-inset-sm-on-sm\",\n    \"insetMdOnSm\": \"pf-m-inset-md-on-sm\",\n    \"insetLgOnSm\": \"pf-m-inset-lg-on-sm\",\n    \"insetXlOnSm\": \"pf-m-inset-xl-on-sm\",\n    \"inset_2xlOnSm\": \"pf-m-inset-2xl-on-sm\",\n    \"inset_3xlOnSm\": \"pf-m-inset-3xl-on-sm\",\n    \"horizontalOnMd\": \"pf-m-horizontal-on-md\",\n    \"verticalOnMd\": \"pf-m-vertical-on-md\",\n    \"insetNoneOnMd\": \"pf-m-inset-none-on-md\",\n    \"insetXsOnMd\": \"pf-m-inset-xs-on-md\",\n    \"insetSmOnMd\": \"pf-m-inset-sm-on-md\",\n    \"insetMdOnMd\": \"pf-m-inset-md-on-md\",\n    \"insetLgOnMd\": \"pf-m-inset-lg-on-md\",\n    \"insetXlOnMd\": \"pf-m-inset-xl-on-md\",\n    \"inset_2xlOnMd\": \"pf-m-inset-2xl-on-md\",\n    \"inset_3xlOnMd\": \"pf-m-inset-3xl-on-md\",\n    \"horizontalOnLg\": \"pf-m-horizontal-on-lg\",\n    \"verticalOnLg\": \"pf-m-vertical-on-lg\",\n    \"insetNoneOnLg\": \"pf-m-inset-none-on-lg\",\n    \"insetXsOnLg\": \"pf-m-inset-xs-on-lg\",\n    \"insetSmOnLg\": \"pf-m-inset-sm-on-lg\",\n    \"insetMdOnLg\": \"pf-m-inset-md-on-lg\",\n    \"insetLgOnLg\": \"pf-m-inset-lg-on-lg\",\n    \"insetXlOnLg\": \"pf-m-inset-xl-on-lg\",\n    \"inset_2xlOnLg\": \"pf-m-inset-2xl-on-lg\",\n    \"inset_3xlOnLg\": \"pf-m-inset-3xl-on-lg\",\n    \"horizontalOnXl\": \"pf-m-horizontal-on-xl\",\n    \"verticalOnXl\": \"pf-m-vertical-on-xl\",\n    \"insetNoneOnXl\": \"pf-m-inset-none-on-xl\",\n    \"insetXsOnXl\": \"pf-m-inset-xs-on-xl\",\n    \"insetSmOnXl\": \"pf-m-inset-sm-on-xl\",\n    \"insetMdOnXl\": \"pf-m-inset-md-on-xl\",\n    \"insetLgOnXl\": \"pf-m-inset-lg-on-xl\",\n    \"insetXlOnXl\": \"pf-m-inset-xl-on-xl\",\n    \"inset_2xlOnXl\": \"pf-m-inset-2xl-on-xl\",\n    \"inset_3xlOnXl\": \"pf-m-inset-3xl-on-xl\",\n    \"horizontalOn_2xl\": \"pf-m-horizontal-on-2xl\",\n    \"verticalOn_2xl\": \"pf-m-vertical-on-2xl\",\n    \"insetNoneOn_2xl\": \"pf-m-inset-none-on-2xl\",\n    \"insetXsOn_2xl\": \"pf-m-inset-xs-on-2xl\",\n    \"insetSmOn_2xl\": \"pf-m-inset-sm-on-2xl\",\n    \"insetMdOn_2xl\": \"pf-m-inset-md-on-2xl\",\n    \"insetLgOn_2xl\": \"pf-m-inset-lg-on-2xl\",\n    \"insetXlOn_2xl\": \"pf-m-inset-xl-on-2xl\",\n    \"inset_2xlOn_2xl\": \"pf-m-inset-2xl-on-2xl\",\n    \"inset_3xlOn_2xl\": \"pf-m-inset-3xl-on-2xl\"\n  }\n};","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Divider/divider.mjs';\nimport { formatBreakpointMods } from '../../helpers/util';\nexport var DividerVariant;\n(function (DividerVariant) {\n    DividerVariant[\"hr\"] = \"hr\";\n    DividerVariant[\"li\"] = \"li\";\n    DividerVariant[\"div\"] = \"div\";\n})(DividerVariant || (DividerVariant = {}));\nexport const Divider = (_a) => {\n    var { className, component = DividerVariant.hr, inset, orientation } = _a, props = __rest(_a, [\"className\", \"component\", \"inset\", \"orientation\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: css(styles.divider, formatBreakpointMods(inset, styles), formatBreakpointMods(orientation, styles), className) }, (component !== 'hr' && { role: 'separator' }), props)));\n};\nDivider.displayName = 'Divider';\n//# sourceMappingURL=Divider.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Form/form.mjs';\nimport { css } from '@patternfly/react-styles';\nexport const ActionGroup = (_a) => {\n    var { children = null, className = '' } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    const customClassName = css(styles.formGroup, styles.modifiers.action, className);\n    const formActionsComponent = React.createElement(\"div\", { className: css(styles.formActions) }, children);\n    return (React.createElement(\"div\", Object.assign({}, props, { className: customClassName }),\n        React.createElement(\"div\", { className: css(styles.formGroupControl) }, formActionsComponent)));\n};\nActionGroup.displayName = 'ActionGroup';\n//# sourceMappingURL=ActionGroup.js.map","import './disabled-page.scss'\nimport React from 'react';\nimport {\n    Title,\n    Text\n} from '@patternfly/react-core';\nimport LockIcon from '@patternfly/react-icons/dist/esm/icons/lock-icon';\n\nconst DisabledPage = () => {\n\n    return <div className=\"disabledDiv\">\n        <LockIcon className=\"lockIcon\"/>\n        <Title headingLevel=\"h2\" size=\"xl\" className=\"pf-u-mt-lg\">This page is temporarily disabled or unavailable at this time</Title>\n        <Text className=\"pf-u-mt-lg\">Please check again at a another time or reach out to Red Hat customer service for additional support</Text>\n    </div>\n}\n\nexport default DisabledPage;\n","import { createIcon } from '../createIcon';\n\nexport const OutlinedQuestionCircleIconConfig = {\n  name: 'OutlinedQuestionCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const OutlinedQuestionCircleIcon = createIcon(OutlinedQuestionCircleIconConfig);\n\nexport default OutlinedQuestionCircleIcon;","import './two-factor-check.scss';\nimport React, { useEffect, useState } from 'react';\nimport {\n    Title,\n    Text,\n    Button,\n    FormGroup,\n    Checkbox,\n    ActionGroup,\n    Popover,\n    PageSection,\n    Form\n} from '@patternfly/react-core';\nimport ExternalLinkSquareAltIcon from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport QuestionIcon from '@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon'\nimport { useDispatch } from 'react-redux'\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport PropTypes from \"prop-types\";\n\nlet docLink = \"\";\nlet statusURL = \"http://localhost:8081/auth/realms/redhat-external/apis/organizations/v1/my/authentication-policy\";\n\ninterface Props{\n    tokenData: string\n}\n\nconst TwoFactorCheck = ({tokenData}: Props) => {\n    const chrome = useChrome();\n\n    if (chrome.getEnvironment() === 'stage') {\n        statusURL = \"https://sso.stage.redhat.com/auth/realms/redhat-external/apis/organizations/v1/my/authentication-policy\";\n        docLink = \"https://access.stage.redhat.com/documentation/en-us/red_hat_customer_portal/1/html/using_two-factor_authentication/con-ciam-2fa-about_two-factor-authentication\";\n    }\n    else if (chrome.getEnvironment() === 'prod') {\n        statusURL = \"https://sso.redhat.com/auth/realms/redhat-external/apis/organizations/v1/my/authentication-policy\";\n        docLink = \"https://access.redhat.com/documentation/en-us/red_hat_customer_portal/1/html/using_two-factor_authentication/con-ciam-2fa-about_two-factor-authentication\"\n    }\n    const dispatch = useDispatch();\n\n    // build the state hooks\n    const [checkState, updateCheckState] = useState({\n        checked: false,\n        changed: false,\n    });\n    const [loadingState, updateLoadingState] = useState({loading: true});\n\n\n    const toggleCheckBox = () => {\n        updateCheckState({\n            checked: !checkState.checked,\n            changed: true\n        })\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    const successAlert = () => {\n        dispatch(\n            addNotification({\n                variant: 'success',\n                description: 'Authentication policy settings saved',\n                title: \"Success\"\n            })\n        );\n    };\n\n    const failureAlert = (er: string) => {\n        dispatch(\n            addNotification({\n                variant: 'danger',\n                description: er,\n                title: 'Error'\n            })\n        );\n    };\n\n    const pullCurrentState = () => {\n        // Need to establish the existing state by querying the base endpoint.\n\n        fetch(statusURL, {\n            method: 'GET',\n            referrerPolicy: 'no-referrer',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + tokenData\n            }\n        })\n            .then(response => response.json())\n            .then(data => {\n                if (data.error) {\n                    console.error(data.error);\n                    failureAlert('Failed to fetch the current status');\n                }\n                else {\n                    updateCheckState({\n                        checked: data.authenticationFactors.otp.required,\n                        changed: false\n                    });\n                    updateLoadingState({\n                        loading: false\n                    })\n                }\n            });\n    }\n\n    // equivalent to componentDidMount when provided an empty array as a second param\n    useEffect(() => {\n        pullCurrentState()\n    }, []);\n\n\n    // following the api: https://docs.google.com/document/d/1kj0ZTwFx2-vmUYogW6Iz7d4DzQ-U1r8DmiQV1qWTPTA/edit\n    const updateStatus = () => {\n        const payload = {\"authenticationFactors\": {\"otp\": {\"required\": false}}};\n        if (checkState.checked) {\n            payload.authenticationFactors.otp.required = true;\n        } else {\n            payload.authenticationFactors.otp.required = false;\n        }\n        // eslint-disable-next-line no-undef\n        chrome.auth.getToken().then(token => {\n            fetch(statusURL, {\n                method: 'POST',\n                referrerPolicy: 'no-referrer',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + token\n                },\n                body: JSON.stringify(payload)\n            }).then(response => response.json())\n                .then(data => {\n\n                    if (data.error) {\n                        console.error(data.error);\n                        failureAlert(data.error);\n                    }\n\n                    updateCheckState({\n                        checked: data.authenticationFactors.otp.required,\n                        changed: false\n                    });\n\n                    successAlert();\n                });\n        });\n    }\n\n    return <PageSection>\n        <Form>\n            <div>\n                <Title headingLevel=\"h2\" size=\"xl\">Organizational two-factor authentication</Title>\n\n                <Text className=\"primaryTextBox pf-v5-u-mt-md\">\n                    Enable organizational two-factor authentication to require all users to use a password and a\n                    one-time code to log in. When enabled, each user in your organization must install an authenticator application on\n                    a compatible mobile device in order to log in.\n                    <Button variant=\"link\" href={docLink} target=\"_blank\" component=\"a\" isInline icon={<ExternalLinkSquareAltIcon />} iconPosition=\"right\" className=\"pf-v5-u-ml-xs\">\n                        Learn more about two-factor authentication\n                    </Button>\n                </Text>\n\n                <FormGroup className=\"pf-v5-u-mt-md\">\n                    <Checkbox onChange={toggleCheckBox} label=\"Enable two-factor authentication for your organization\" id=\"confirmed\" className=\"twofaCheck\" isChecked={checkState.checked}></Checkbox>\n\n                    <Popover\n                        aria-label=\"Advanced popover usages example\"\n                        position={\"right\"}\n                        hideOnOutsideClick={true}\n                        enableFlip={true}\n                        appendTo={() => document.body}\n                        maxWidth={\"18rem\"}\n                        minWidth={\"2rem\"}\n                        bodyContent={\n                            <div>\n                                Users will be required to set up two-factor authentication the next time they attempt to log in.\n                            </div>\n                        }\n                        children={<Button id=\"infoIcon\" variant=\"link\" component=\"span\" isInline className=\"questionIcon pf-v5-u-ml-xs\" icon={<QuestionIcon/>}></Button>}\n                        className=\"pf-v5-u-text-align-center\"\n                    ></Popover>\n                </FormGroup>\n\n                <ActionGroup className=\"pf-v5-u-mt-3xl\">\n                    <Button onClick={updateStatus} isDisabled={loadingState.loading || !checkState.changed}>Save</Button>\n                    <Button onClick={pullCurrentState} variant=\"link\" isInline className=\"pf-v5-u-ml-lg\">Cancel</Button>\n                </ActionGroup>\n            </div>\n        </Form>\n    </PageSection>\n\n}\n\n\nTwoFactorCheck.propTypes = {\n    tokenData: PropTypes.string\n}\n\n\nexport default TwoFactorCheck;\n","import './non-admin-user.scss'\nimport React from 'react';\nimport {\n  Title,\n  Text,\n  Button\n} from '@patternfly/react-core';\nimport LockIcon from '@patternfly/react-icons/dist/esm/icons/lock-icon';\n\nconst NonAdminUser = () => {\n\n  const triggerRedirect = () => {\n    window.location.href = \"/iam/my-user-access\";\n  }\n\n  return <div className=\"nonAdminDiv\">\n    <LockIcon className=\"lockIcon\" />\n    <Title headingLevel=\"h2\" size=\"xl\" className=\"pf-v5-u-mt-lg\">You do not have access to Authentication Factors</Title>\n    <Text className=\"pf-v5-u-mt-lg\">Contact your organization administrator(s) for more information, or visit My User Access to learn more about your permissions.</Text>\n    <Button variant=\"link\" onClick={triggerRedirect} className=\"pf-v5-u-mt-lg\">Go to landing page</Button>\n  </div>\n}\n\nexport default NonAdminUser;\n","import React, { useEffect, useState } from 'react';\nimport {\n  Divider\n} from '@patternfly/react-core'\nimport { useFlag } from '@unleash/proxy-client-react';\nimport TwoFactorCheck from '../../Apps/TwoFactorCheck/two-factor-check';\nimport DisabledPage from \"../../Components/DisabledPage/disabled-page\";\nimport NonAdminUser from '../../Components/NonAdminUser/non-admin-user';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\n\n\nimport './authentication-factors.scss';\nimport { isAdminUser } from '../../Utils/general-utils';\n\n/**\n * A smart component that handles all the api calls and data needed by the dumb components.\n * Smart components are usually classes.\n *\n * https://reactjs.org/docs/components-and-props.html\n * https://medium.com/@thejasonfile/dumb-components-and-smart-components-e7b33a698d43\n */\nconst AuthFactors = () => {\n  const chrome = useChrome();\n  let userToken = null;\n  const [currentUser, updateUser] = useState({\n    adminUser: false,\n    twofadisplay: <NonAdminUser />\n  })\n  const is2FAEnabled = useFlag('iamconsole.authfactors.enabled');\n\n\n  useEffect(() => {\n    // eslint-disable-next-line no-undef\n    chrome?.appAction?.('authentication-factors');\n    // eslint-disable-next-line no-undef\n    chrome.auth.getToken().then(token => {\n      userToken = token;\n      // if the user is in fact and admin user then render TwoFactorCheck\n      if (isAdminUser(userToken!) && is2FAEnabled) {\n        updateUser({\n          adminUser: true,\n          twofadisplay: <TwoFactorCheck tokenData={userToken!} />\n        })\n      }\n\n      // check to see if 2fa feature flag is set. if not then render the proper error page\n      if (!is2FAEnabled) {\n        updateUser({\n          adminUser: false,\n          twofadisplay: <DisabledPage />\n        })\n      }\n\n    })\n  }, []);\n\n  return (\n    <React.Fragment>\n      {currentUser.adminUser &&\n        <div>\n          <PageHeader>\n            <PageHeaderTitle title=\"Authentication Factors\" className=\"pf-v5-u-mb-lg\" />\n            <p> Manage authentication factors for your organization. </p>\n          </PageHeader>\n          <Divider />\n        </div>\n      }\n      {currentUser.twofadisplay}\n    </React.Fragment>\n  );\n};\n\nexport default AuthFactors;\n","import {ValidationTemplate} from \"../Apps/IdpSelfService/CommonInterfaces/oidc-validation\";\nimport {UserChoices} from \"../Apps/IdpSelfService/CommonInterfaces/user-choices\";\n\nfunction parseToken (token :string) {\n    // eslint-disable-next-line no-magic-numbers\n    const base64Url = token.split('.')[1];\n    // eslint-disable-next-line require-unicode-regexp\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = JSON.parse(decodeURIComponent(window.atob(base64).split('')\n        .map(\n            (c) => {\n                // eslint-disable-next-line no-magic-numbers\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            }\n        )\n        .join('')));\n    return jsonPayload;\n}\n\nexport function isAdminUser (token :string) {\n    return parseToken(token).is_org_admin;\n}\n\n\nexport function getOrgId (token :string) {\n    return parseToken(token).org_id;\n}\n\ninterface Updatable{\n    [key:string]: string\n}\n\n/**\n *\n * @param {*} value\n * @param {*} key\n * @param {*} stateObject\n * @param {*} updateFunction\n */\n// eslint-disable-next-line max-params\nexport function setStateValue (value :string, key :string, stateObject:Object|undefined, updateFunction :Function) {\n\n    const updatedValue :Updatable = {};\n    updatedValue[key] = value;\n    const updated = {\n        ...stateObject,\n        ...updatedValue\n    }\n\n    updateFunction(updated);\n}\n\ninterface VerificationResult {\n    status: string;\n    message: string;\n}\n\n/**\n *\n * @param {String} input value to be checked based on the provided type\n * @param {String} type effectively and enum used to specify the type of check we need to run\n * @param {boolean} required is this a required field\n * @returns String message to be relayed to the user pertaining to the invalid input\n * // success, warning, error, or default\n */\nexport function verifyInput (input:string, type:string, required:boolean) :VerificationResult {\n    if (required && !input) {\n        if (type === 'RADIO') {\n            return {\n                status: 'error',\n                message: 'A selection must be made'\n            }\n        }\n        return {\n            status: 'error',\n            message: 'This field can not be left empty'\n        };\n    }\n\n    let verified:VerificationResult;\n    let results :boolean;\n\n    switch (type) {\n        case 'GENERAL':\n            // eslint-disable-next-line require-unicode-regexp\n            results = !(/[^A-Za-z0-9]/).test(input);\n\n\n            verified = {\n                status: results ? 'default' : 'error',\n                message: results ? '' : 'This text is invalid please check for uncommonly used characters or spaces'\n            }\n            break;\n        case 'DOMAIN':\n            // eslint-disable-next-line require-unicode-regexp\n            results = (/(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]/g).test(input)\n            verified = {\n                status: results ? 'default' : 'error',\n                message: results ? '' : 'This field needs to be a valid URL'\n            }\n            break;\n        case 'x509':\n\n            // eslint-disable-next-line\n            results = (/^([A-Za-z0-9+\\/=]+)(,[A-Za-z0-9+\\/=]+)*$/).test(input);\n\n            verified = {\n                status: results ? 'default' : 'error',\n                message: results ? '' : 'This is invalid, please check for uncommonly used characters. Be sure to exclude the start and end block'\n            }\n            break;\n\n        default:\n            verified = {\n                status: 'default',\n                message: ''\n            }\n    }\n    return verified;\n}\n\n/**\n * \n * @param {Object} choices state object containing all of the users input data\n * @param {Object} validations validations object pre-set to govern what the inputs are intended to be\n * @param {function} setValidations function used to update active validations.\n * @param {String} currentState variable being changed\n * @return {boolean} represents the current pass fail state for the provided validation set\n */\n// eslint-disable-next-line\nexport function isFailureTriggered (choices :UserChoices, currentState :string, validations: ValidationTemplate, setValidations: Function) {\n    let failureTriggered = false;\n    const update: ValidationTemplate = {};\n    Object.keys(validations).forEach(validationKey => {\n        update[validationKey] = {};\n        if (validationKey === currentState) {\n            Object.keys(validations[currentState]).forEach(field => {\n\n                const submittedValue = choices && choices.selections[field];\n                // @ts-ignorer\n                const submittedType = validations[validationKey][field].inputType;\n\n                const verificationObject: VerificationResult = verifyInput(submittedValue, submittedType, true);\n\n                if (verificationObject.status !== 'default') {\n                    failureTriggered = true;\n                }\n\n                // @ts-ignore\n                update[validationKey][field] = {\n                    inputType: submittedType,\n                    variant: verificationObject.status,\n                    message: verificationObject.message\n                }\n            });\n        }\n    });\n\n    setValidations(update);\n    return failureTriggered;\n}\n\nexport const getSSOBaseUrl = (chromeApi: any) => {\n    if (chromeApi.getEnvironment() === 'prod') {\n        return \"https://sso.redhat.com/auth/realms/redhat-external/\";\n    }\n    return \"https://sso.stage.redhat.com/auth/realms/redhat-external/\";\n}\n\nexport const getSSOApiUrl = (chromeApi: any, apiPath: string) => {\n    return getSSOBaseUrl(chromeApi) + apiPath;\n}\n\nexport const setupBackTriggerNotification = () => {\n    window.addEventListener(\"popstate\", () => {\n        // eslint-disable-next-line no-alert\n        alert(\"Please note that use of the back arrow on this page will cause you to lose your currently configured data\");\n    })\n}\n"],"names":["DividerVariant","Divider","_a","className","component","hr","inset","orientation","props","Component","Object","assign","divider","role","displayName","ActionGroup","children","customClassName","formGroup","modifiers","action","formActionsComponent","formActions","formGroupControl","headingLevel","size","name","height","width","svgPath","yOffset","xOffset","docLink","statusURL","TwoFactorCheck","tokenData","chrome","useChrome","getEnvironment","dispatch","checkState","updateCheckState","useState","checked","changed","loadingState","updateLoadingState","loading","failureAlert","er","variant","description","title","pullCurrentState","fetch","method","referrerPolicy","headers","then","response","json","data","error","console","authenticationFactors","otp","required","useEffect","PageSection","Form","Title","Text","Button","href","target","isInline","icon","iconPosition","FormGroup","Checkbox","onChange","label","id","isChecked","Popover","position","hideOnOutsideClick","enableFlip","appendTo","document","body","maxWidth","minWidth","bodyContent","onClick","payload","auth","getToken","token","JSON","stringify","isDisabled","propTypes","window","location","userToken","currentUser","updateUser","adminUser","twofadisplay","is2FAEnabled","useFlag","appAction","PageHeader","PageHeaderTitle","parseToken","base64","split","replace","parse","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","isAdminUser","is_org_admin","getOrgId","org_id","setStateValue","value","key","stateObject","updateFunction","updatedValue","isFailureTriggered","choices","currentState","validations","setValidations","failureTriggered","update","keys","forEach","validationKey","field","submittedValue","selections","submittedType","inputType","verificationObject","input","type","status","message","verified","results","test","verifyInput","getSSOBaseUrl","chromeApi","getSSOApiUrl","apiPath"],"sourceRoot":""}