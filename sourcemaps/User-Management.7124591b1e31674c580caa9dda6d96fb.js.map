{"version":3,"file":"js/User-Management.cc8d9ddaa85a5747d4e3.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/lock-icon.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Dark/DarkContext.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeader.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeaderTitle.js","webpack:///./src/Components/disabledPage/disabled-page.js","webpack:///./src/Components/utils/general-utils.js","webpack:///./src/Components/userManagement/UserList.js","webpack:///./src/Components/userManagement/modifyUser/DropdownHandler.js","webpack:///./src/Components/userManagement/modifyUser/AddUser.js","webpack:///./src/Components/userManagement/UserManagementController.js","webpack:///./src/Routes/Authentication-Policy/User-Management.js","webpack:///./node_modules/classnames/index.js","webpack:///./node_modules/object-assign/index.js","webpack:///./node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack:///./node_modules/react/jsx-runtime.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const LockIconConfig = {\n  name: 'LockIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const LockIcon = createIcon(LockIconConfig);\n\nexport default LockIcon;","import React from 'react';\nvar DarkContext = React.createContext('light');\nexport default DarkContext;\n//# sourceMappingURL=DarkContext.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { DarkContext } from '../Dark';\nimport '../PageHeader/page-header.css';\nvar PageHeader = function (_a) {\n    var className = _a.className, children = _a.children, props = __rest(_a, [\"className\", \"children\"]);\n    var pageHeaderClasses = classNames(className, 'pf-l-page-header', 'pf-c-page-header', 'pf-l-page__main-section', 'pf-c-page__main-section');\n    return (_jsx(DarkContext.Consumer, { children: function (theme) {\n            var _a, _b;\n            if (theme === void 0) { theme = 'light'; }\n            var themeClasses = classNames((_a = {}, _a[\"pf-m-\".concat(theme, \"-200\")] = theme === 'dark', _a), (_b = {}, _b[\"pf-m-light\"] = theme === 'light', _b));\n            return (_jsx(\"section\", __assign({}, props, { className: \"\".concat(pageHeaderClasses, \" \").concat(themeClasses), \"widget-type\": \"InsightsPageHeader\" }, { children: children })));\n        } }));\n};\nexport default PageHeader;\n//# sourceMappingURL=PageHeader.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { Title } from '@patternfly/react-core';\nvar PageHeaderTitle = function (_a) {\n    var className = _a.className, title = _a.title;\n    var pageHeaderTitleClasses = classNames(className);\n    return (_jsx(Title, __assign({ headingLevel: \"h1\", size: \"2xl\", className: pageHeaderTitleClasses, \"widget-type\": \"InsightsPageHeaderTitle\" }, { children: title })));\n};\nexport default PageHeaderTitle;\n//# sourceMappingURL=PageHeaderTitle.js.map","import './disabled-page.scss'\nimport React from 'react';\nimport {\n    Title,\n    Text\n} from '@patternfly/react-core';\nimport LockIcon from '@patternfly/react-icons/dist/esm/icons/lock-icon';\n\nconst DisabledPage = (props) => {\n\n    return <div className=\"disabledDiv\">\n        <LockIcon className=\"lockIcon\"/>\n        <Title headingLevel=\"h2\" size=\"xl\" className=\"pf-u-mt-lg\">This page is temporarily disabled or unavailable at this time</Title>\n        <Text className=\"pf-u-mt-lg\">Please check again at a another time or reach out to Red Hat customer service for additional support</Text>\n    </div>\n}\n\nexport default DisabledPage;\n","\n\n\n\n    \n/**\n * \n * @param {*} token keycloak provided token used to validate the existing logged in user\n * @returns \n */\nexport function isAdminUser (token) {\n    var base64Url = token.split('.')[1];\n    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    var jsonPayload = JSON.parse(decodeURIComponent(window.atob(base64).split('').map(function(c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join('')));\n    return jsonPayload && jsonPayload.is_org_admin;\n}\n\n/**\n * \n * @param {*} value \n * @param {*} key \n * @param {*} stateObject \n * @param {*} updateFunction \n */\nexport function setStateValue (value, key, stateObject, updateFunction) {\n\n    let updatedValue = {};\n    updatedValue[key] = value;\n    let updated = {\n        ...stateObject,\n        ...updatedValue\n    }\n\n    updateFunction(updated);\n}\n\n/**\n * \n * @param {String} input value to be checked based on the provided type\n * @param {String} type effectively and enum used to specify the type of check we need to run \n * @returns String message to be relayed to the user pertaining to the invalid input\n * // success, warning, error, or default\n */\nexport function verifyInput (input, type, required) {\n    if(required && !input){\n        return {\n            status: \"error\",\n            message: 'This field can not be left empty'\n        };\n    }\n\n    let verified = {};\n    let results = '';\n\n    switch(type){\n        case 'GENERAL':\n            results = /^[.@&]?[a-zA-Z0-9 ]+[ !.@&()]?[ a-zA-Z0-9!()]+/.test(input);\n\n\n            verified={\n                status: results ? 'default':'error',\n                message: results ? '' : 'This text is invalid please check for uncommonly used characters'\n            }\n            break;\n        case 'DOMAIN':\n            results = /(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]/g.test(input)\n            verified={\n                status: results ? 'default':'error',\n                message: results ? '' : 'This field needs to be a valid URL'\n            }\n            break;\n        default :\n            verified={\n                status: 'default',\n                message: ''\n            }\n    }\n    return verified;\n\n\n}\n\n/**\n * \n * @param {Object} selections state object containing all of the users input data\n * @param {Object} validations validations object pre-set to govern what the inputs are intended to be\n * @param {function} setValidations function used to update active validations.\n * @return {boolean} represents the current pass fail state for the provided validation set\n */\nexport function processAllInputs (selections, validations, setValidations) {\n    let failureTriggered = false;\n    let update = {};\n    Object.keys(validations).forEach(validationKey => {\n        let submittedValue = selections && selections[validationKey]\n        let submittedType = validations[validationKey].inputType\n\n        let verificationObject = verifyInput(submittedValue, submittedType, true);\n\n        if(verificationObject.status === 'error'){\n            failureTriggered = true;\n        }\n\n        update[validationKey] = {\n            inputType: submittedType,\n            status: verificationObject.status,\n            message: verificationObject.message\n        }\n       \n    });\n\n    setValidations(update);\n\n    return failureTriggered;\n}\n","import './UserList.scss';\nimport React, {useEffect, useState, useContext} from 'react';\nimport { TableComposable, Thead, Tr, Th, Tbody, Td } from '@patternfly/react-table';\nimport {Toolbar, ToolbarItem, ToolbarContent, SearchInput, Button, Pagination, PaginationVariant, Checkbox} from '@patternfly/react-core';\nimport {PageHeader, PageHeaderTitle} from \"@redhat-cloud-services/frontend-components/PageHeader\";\nimport {QueryContext} from './UserManagementController';\n\nconst UserList = (props) => {\n    const queryDetails = useContext(QueryContext);\n    const [listData, setListData] = useState([]);\n    const [checkedUsers, setCheckedUsers] = useState({});\n    const [perPageValue, setPerPageValue] = useState(10);\n    const [currentPage, setCurrentPage] = useState(0);\n    const [resultsCount, setResultsCount] = useState(20)\n\n    const pullUserList = () => {\n        let targetUrl = queryDetails.accountAPI + \"/\" + queryDetails.accountID + \"/users?\"\n        targetUrl = targetUrl + new URLSearchParams({\n            firstResultIndex: currentPage,\n            maxResults: perPageValue\n        })\n        fetch(targetUrl, {\n            method: 'GET',\n            headers:{\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + queryDetails.userToken\n            }\n        })\n            .then(response => response.json())\n            .then(userList => {\n                setListData(userList.body);\n\n                let checkReference = {}\n                // iterate through the result list to populate checked status\n                for(let i=0; i < userList.body.length; i++){\n                    let userObj = {\n                        status: userList.body[i].user.status,\n                        username: userList.body[i].user.username,\n                        checked: false\n                    }\n                    let userId = userList.body[i].user.id\n\n                    checkReference[userId] = userObj;\n                }\n                setCheckedUsers(checkReference);\n            })\n    }\n\n    /**\n     * On load pull the user list\n     */\n    useEffect( () => {\n        pullUserList();\n    },[currentPage]);\n\n    const doNothing = (something) => {\n\n    }\n\n    /**\n     *\n     */\n    const disableUser = () => {\n        let targetForDisable;\n        let checkedList = Object.keys(checkedUsers);\n        for (let i = 0; i < checkedList.length; i++) {\n            if(checkedUsers[checkedList[i]].checked) {\n                targetForDisable = checkedList[i];\n                break;\n            }\n        }\n\n        if(targetForDisable){\n            fetch(queryDetails.accountAPI + \"/\" + queryDetails.accountID + \"/users\" + \"/\" + targetForDisable + \"/status\", {\n                method: 'POST',\n                headers:{\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + queryDetails.userToken\n                },\n                body: JSON.stringify({\n                    \"status\": \"disabled\"\n                })\n\n            })\n                .then(response => response.json())\n                .then(resp => {\n                    // fire the queries required to disable all selected users\n                    window.location.reload(false);\n                })\n        }\n    }\n\n    /**\n     * triggered by the edit user button, this function calls the prop passed in that will swap the view to\n     * use edit.\n     */\n    const editUser = () => {\n        let targetForEdit;\n        let checkedList = Object.keys(checkedUsers);\n        for (let i = 0; i < checkedList.length; i++) {\n            if(checkedUsers[checkedList[i]].checked) {\n                targetForEdit = checkedList[i];\n                break;\n            }\n        }\n\n        if(targetForEdit){\n            fetch(queryDetails.accountAPI + \"/\" + queryDetails.accountID + \"/users\" + \"/\" + targetForEdit, {\n                method: 'GET',\n                headers:{\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + queryDetails.userToken\n                },\n\n            })\n                .then(response => response.json())\n                .then(resp => {\n                    // fire the queries required to disable all selected users\n                    props.triggerEditUser(resp.body);\n                })\n        }\n    }\n\n    /**\n     * Governs what happens when a user clicks a checkbox. Manages the checkbox useState status\n     */\n    const handleCheckbox = (id, checked) => {\n\n        // get the existing state\n        let existing = checkedUsers[id];\n\n        // if we know something has been checked then display the 'disable user', and 'edit user' buttons\n        if(checked){\n            // reset with checked\n            existing.checked = true;\n        }\n        else{\n            existing.checked = false;\n        }\n\n        setCheckedUsers({...checkedUsers, [id]: existing});\n\n\n    }\n\n    // when the current page value updates trigger the repull\n    /*useEffect(() => {\n\n    },[pullUserList])*/\n\n    /**\n     *\n     */\n    const handleNextPageClick = () => {\n        setCurrentPage(currentPage + perPageValue);\n    }\n\n    /**\n     *\n     */\n    const handlePrevPageClick = () => {\n        setCurrentPage(currentPage - perPageValue);\n    }\n\n    const ConditionRender = () => {\n        if(listData.length > 0){\n            return <div>\n                        <Toolbar id=\"userListToolbar\">\n                            <ToolbarContent>\n                                <ToolbarItem>\n                                    <SearchInput aria-label=\"Search user list\"/>\n                                </ToolbarItem>\n                                <ToolbarItem>\n                                    <Button onClick={props.triggerAddUser} variant=\"primary\">Add User</Button>\n                                </ToolbarItem>\n                                <ToolbarItem>\n                                    <Button onClick={editUser} variant=\"primary\">Edit User</Button>\n                                </ToolbarItem>\n                                <ToolbarItem>\n                                    <Button onClick={disableUser} variant=\"link\">Disable User</Button>\n                                </ToolbarItem>\n                            </ToolbarContent>\n                        </Toolbar>\n                        <TableComposable aria-label=\"Sortable table\">\n                            <Thead>\n                                <Tr>\n                                    <Th\n                                        select={{\n                                            onSelect: (_event, isSelecting) => doNothing(),\n                                            isSelected: doNothing()\n                                        }}\n                                    />\n                                    <Th>Name</Th>\n                                    <Th modifier=\"wrap\">Email</Th>\n                                    <Th modifier=\"wrap\" info={{ tooltip: 'More information ' }}>\n                                        LastName\n                                    </Th>\n                                    <Th modifier=\"wrap\">First Name</Th>\n                                    <Th modifier=\"wrap\">Status</Th>\n                                </Tr>\n                            </Thead>\n                            <Tbody>\n                                {listData.map((userRecord, rowIndex) => (\n                                    <Tr key={userRecord.user.username}>\n                                        <Td>\n                                            <Checkbox\n                                                onChange={(val) => handleCheckbox(userRecord.user.id, val)}\n                                                isChecked={checkedUsers[userRecord.user.id].checked}\n                                                id={userRecord.user.id + '-check'}\n                                            />\n                                        </Td>\n                                        <Td>{userRecord.user.username}</Td>\n                                        <Td>{userRecord.user.email}</Td>\n                                        <Td>{userRecord.user.lastName}</Td>\n                                        <Td>{userRecord.user.firstName}</Td>\n                                        <Td>{userRecord.user.status}</Td>\n                                    </Tr>\n                                ))}\n                            </Tbody>\n                        </TableComposable>\n                        <Pagination\n                            perPageComponent=\"button\"\n                            widgetId=\"bottom-pagination\"\n                            itemCount={resultsCount}\n                            perPage={perPageValue}\n                            variant={PaginationVariant.bottom}\n                            onPerPageSelect={(selection) => {setPerPageValue(selection)}}\n                            onNextClick={handleNextPageClick}\n                            onPreviousClick={handlePrevPageClick}\n                            page={currentPage}\n                        />\n                    </div>\n\n        }\n        else{\n            return <div>spinner ....</div>\n        }\n    }\n\n    return (\n        <div>\n            <ConditionRender/>\n        </div>\n    )\n}\nexport default UserList;\n","import React, {useEffect, useState, useContext} from 'react';\nimport {Dropdown, DropdownItem, DropdownToggle} from \"@patternfly/react-core\";\n\n\n/**\n * A subclass to handle all of the bloat that comes with this under patternfly design\n * @param props primarily intended to  pass the array of items provided to it\n * @constructor\n */\nconst DropdownHandler = (props) => {\n    const [isDDOpen, setIsDDOpen] = React.useState(false);\n    const [selection, setSelection] = React.useState(props.defaultText);\n\n    const onDDToggle = (isOpen) => {\n        setIsDDOpen(isOpen);\n    };\n\n    const onDDFocus = () => {\n        const element = document.getElementById(props.idValue);\n        element.focus();\n    };\n    const onDDSelect = () => {\n        setIsDDOpen(false);\n        onDDFocus();\n    };\n\n    return (\n        <Dropdown\n            onSelect={onDDSelect}\n            toggle={\n                <DropdownToggle id={props.idValue} onToggle={onDDToggle}>\n                    {selection}\n                </DropdownToggle>\n            }\n            isOpen={isDDOpen}\n            dropdownItems={props.items.map( function (val) {return <DropdownItem key={val} onClick={()=>{props.onSelect(val); setSelection(val);}}>{val}</DropdownItem>})}\n        />\n    )\n}\nexport default DropdownHandler;\n","import './AddUser.scss';\nimport DropdownHandler from './DropdownHandler'\nimport React, {useEffect, useState, useContext} from 'react';\nimport {Button, Card, Form, FormGroup, TextInput,CardHeader, CardBody, Checkbox, ActionGroup, Divider, Alert, AlertGroup} from \"@patternfly/react-core\";\nimport {QueryContext} from '../UserManagementController';\n\n/**\n * The form page allowing for the creation of new users.\n * @param props\n * @return {JSX.Element}\n * @constructor\n */\nconst AddUser = (props) => {\n    const queryDetails = useContext(QueryContext);\n\n    // role: organization_administrator\n    // permissions portal_download, portal_system_management, portal_manage_subscriptions, portal_manage_cases\n\n    const [alerts, setAlerts] = useState([]);\n    const [isEditMode, setIsEditMode] = useState(false);\n\n    // base form data that needs to be sent to account api.\n    const [formData, setFormData] = useState({\n        salutation: '',\n        firstName:'',\n        lastName:'',\n        email:'',\n        address:{\n            city: '',\n            country:'',\n            county:'',\n            state:'',\n            streets:[],\n            zipCode:''\n        },\n        permissions: [\n            ''\n        ],\n        phone: '',\n        roles: [],\n        username: ''\n    });\n\n    useEffect(() => {\n        // if this prop is set, we know that we are in edit mode\n        if(props.editingUser){\n            setIsEditMode(true);\n            setFormData(props.editingUser);\n        }\n    },[])\n\n    const [permsChecks, setPermsChecks] = useState ({\n        portal_manage_subscriptions: false,\n        portal_download: false,\n        portal_system_management: false,\n        portal_manage_cases: false,\n        admin: false\n    })\n\n    // base list of provided greetings. this will definitely need reviewing.\n    const greetings = [\n        \"Mr.\",\n        \"Mrs.\",\n        \"Other\"\n    ]\n\n    /**\n     * order matters in the streets selection but we also need to be able to alter the streets array nested in the\n     * parent address object. This simplifies the process.\n     * @param value the input value provided by the user.\n     * @param position the street array position the provided value belongs in.\n     */\n    const handleStreets = (value, position) => {\n        let streetArray = [...formData.address.streets]\n        streetArray[position] = value;\n        let addressObject = {...formData.address}\n        addressObject.streets = streetArray;\n        setFormData({...formData, address: addressObject});\n    }\n\n    /**\n     * helper function to shorten jsx logic. allow you to set the address properties in the root state.\n     * @param key The address key recieving an update.\n     * @param value The value provided by the user.\n     */\n    const handleAddress = (key, value) => {\n        let addressData = {...formData.address};\n        addressData[key] = value;\n        setFormData({...formData, address: addressData})\n    }\n\n    /**\n     * helper function to take care of dropdown selection.\n     */\n    const handleDropDown = (selection, identifier) => {\n        /*let newSelection = {};\n        newSelection[identifier] = selection;*/\n        setFormData({...formData,[identifier]: selection})\n\n    }\n\n    /**\n     * handles the checkbox selection and properly populates the root form data accordingling.\n     */\n    const handlePermsCheckBox = (boxId) => {\n        let existingPerms = {...permsChecks};\n        existingPerms[boxId] = !permsChecks[boxId];\n        setPermsChecks(existingPerms);\n\n        // need to create an array with the currently most active permission set for the user.\n        let permsKeys = Object.keys(existingPerms);\n        let saveablePermsList = [];\n        for(let i = 0; i < permsKeys.length; i++){\n            if(existingPerms[permsKeys[i]] === true){\n                if(permsKeys[i] === \"admin\"){\n                    let rolesArray = ['organization_administrator'];\n                    setFormData({...formData, roles: rolesArray});\n                }\n                else{\n                    saveablePermsList.push(permsKeys[i])\n                    setFormData({...formData, permissions: saveablePermsList});\n                }\n\n            }\n        }\n\n    }\n\n    /**\n     * handles the submition of the addUser form\n     */\n    const submitForm = () => {\n        // submit query to account api\n        console.log(\"submitting formData object: \")\n        console.log(formData);\n        let updatedForm = {...formData};\n        if(isEditMode){\n            delete updatedForm.id;\n            delete updatedForm.username;\n            delete updatedForm.status;\n        }\n\n        // alter url to handle add vs edit endpoints\n        let targetUrl;\n        if(isEditMode){\n            targetUrl = queryDetails.accountAPI + \"/\" + queryDetails.accountID + \"/users/\" + formData.id;\n        }\n        else{\n            targetUrl = queryDetails.accountAPI + \"/\" + queryDetails.accountID + \"/users\"\n        }\n\n        fetch(targetUrl, {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + queryDetails.userToken\n            },\n            body: JSON.stringify(updatedForm)\n        })\n            .then(response => response.json())\n            .then(resp => {\n                if(resp.status){\n                    if(resp.status === 400){\n                        setAlerts([<Alert title={resp.title} key={resp.title} variant='danger' timeout='8000'>{JSON.stringify(resp.errors)}</Alert>])\n                        document.getElementsByClassName('pf-c-page__main')[0].scrollTop = 0;\n                    }\n                    else if(resp.status === 200){\n                        props.triggerReturn();\n                    }\n                    else{\n                        setAlerts([<Alert title={resp.title} variant='danger' timeout='8000'>Unexpected Result</Alert>])\n                        document.getElementsByClassName('pf-c-page__main')[0].scrollTop = 0;\n                    }\n                }\n                else if(resp.body){\n                    props.triggerReturn();\n                }\n\n            })\n\n        // return to previous page on success\n\n        // on error (likely validation) update existing page with toast.\n    }\n\n    return (\n        <div>\n            <Form>\n\n                <div>\n                    <AlertGroup isLiveRegion>\n                        {alerts}\n                    </AlertGroup>\n                </div>\n\n                <Card>\n                    <CardHeader>\n                        Name\n                    </CardHeader>\n                    <CardBody>\n                        <FormGroup>\n                            <DropdownHandler\n                                items={greetings}\n                                idValue=\"greetingDropdown\"\n                                defaultText=\"Greeting\"\n                                onSelect={ (val) => {handleDropDown(val,\"salutation\")}}\n                            />\n                        </FormGroup>\n                        <FormGroup label=\"First Name\">\n                            <TextInput\n                                id=\"firstName\"\n                                onChange={(value) => {setFormData({...formData, firstName: value})}}\n                                value={formData.firstName}\n                            />\n                        </FormGroup>\n                        <FormGroup label=\"Last Name\">\n                            <TextInput\n                                id=\"lastName\"\n                                onChange={(value) => {setFormData({...formData, lastName: value})}}\n                                value={formData.lastName}\n                            />\n                        </FormGroup>\n                    </CardBody>\n\n                </Card>\n\n                <Card>\n                    <CardHeader>\n                        Address\n                    </CardHeader>\n                    <CardBody>\n                        <FormGroup label=\"Email\">\n                            <TextInput\n                                id=\"email\"\n                                onChange={(value) => {setFormData({...formData, email: value})}}\n                                value={formData.email}\n                            />\n                        </FormGroup>\n                        <FormGroup label=\"Address Line 1\">\n                            <TextInput\n                                id=\"address1\"\n                                onChange={(value) => {handleStreets(value,0)}}\n                                value={formData.address.streets[0]}\n                            />\n                        </FormGroup>\n                        <FormGroup label=\"Address Line 2\">\n                            <TextInput\n                                id=\"address2\"\n                                onChange={(value) => {handleStreets(value,1)}}\n                                value={formData.address.streets[1]}\n                            />\n                        </FormGroup>\n                        <FormGroup label=\"Address Line 3\">\n                            <TextInput\n                                id=\"address3\"\n                                onChange={(value) => {handleStreets(value,2)}}\n                                value={formData.address.streets[2]}\n                            />\n                        </FormGroup>\n                        <FormGroup label=\"Postal Code\">\n                            <TextInput\n                                id=\"postalcode\"\n                                onChange = {(value) => {handleAddress('zipCode', value)}}\n                                value={formData.address.zipCode}\n                            />\n                        </FormGroup>\n                        <FormGroup label=\"City\">\n                            <TextInput\n                                id=\"city\"\n                                onChange = {(value) => {handleAddress('city', value)}}\n                                value={formData.address.city}\n                            />\n                        </FormGroup>\n                        <FormGroup label=\"State\">\n                            <TextInput\n                                id=\"state\"\n                                onChange = {(value) => {handleAddress('state', value)}}\n                                value={formData.address.state}\n                            />\n                        </FormGroup>\n                        <FormGroup label=\"County\">\n                            <TextInput\n                                id=\"county\"\n                                onChange = {(value) => {handleAddress('county', value)}}\n                                value={formData.address.county}\n                            />\n                        </FormGroup>\n                        <FormGroup label=\"Country\">\n                            <TextInput\n                                id=\"country\"\n                                onChange = {(value) => {handleAddress('country', value)}}\n                                value={formData.address.country}\n                            />\n                        </FormGroup>\n                        <FormGroup label=\"Phone Number\">\n                            <TextInput\n                                id=\"phoneNumber\"\n                                onChange = {(value) => {setFormData({...formData, phone: value})}}\n                                value={formData.phone}\n                            />\n                        </FormGroup>\n                    </CardBody>\n                </Card>\n\n                <Card>\n                    <CardHeader>\n                        Red Hat Login\n                    </CardHeader>\n                    <CardBody>\n                        <FormGroup>\n                            <TextInput\n                                id=\"login\"\n                                onChange={(value) => {setFormData({...formData, username: value})}}\n                                value={formData.username}\n                            />\n                        </FormGroup>\n                    </CardBody>\n                </Card>\n\n                <Card>\n                    <CardHeader>\n                        Permissions\n                    </CardHeader>\n                    <CardBody>\n                        <FormGroup>\n                            <Checkbox\n                                label=\"Manage Support Cases\"\n                                isChecked={permsChecks.portal_manage_cases}\n                                onChange={() => {handlePermsCheckBox(\"portal_manage_cases\")}}\n                                id=\"controlled-check-1\"\n                                name=\"check1\"\n                            />\n                            <Checkbox\n                                label=\"Download Software and Updates\"\n                                isChecked={permsChecks.portal_download}\n                                onChange={() => {handlePermsCheckBox(\"portal_download\")}}\n                                id=\"controlled-check-2\"\n                                name=\"check2\"\n                            />\n                            <Checkbox\n                                label=\"View/Renew Subscription Information\"\n                                isChecked={permsChecks.portal_system_management}\n                                onChange={() => {handlePermsCheckBox(\"portal_system_management\")}}\n                                id=\"controlled-check-3\"\n                                name=\"check3\"\n                            />\n                            <Checkbox\n                                label=\"Manage Your Subscriptions\"\n                                isChecked={permsChecks.portal_manage_subscriptions}\n                                onChange={() => {handlePermsCheckBox(\"portal_manage_subscriptions\")}}\n                                id=\"controlled-check-4\"\n                                name=\"check4\"\n                            />\n\n                            <Divider id='adminDivider' component=\"div\"/>\n\n                            <Checkbox\n                                label=\"Account Administrator\"\n                                isChecked={permsChecks.admin}\n                                onChange={() => {handlePermsCheckBox(\"admin\")}}\n                                id=\"admin\"\n                                name=\"check5\"\n                            />\n\n                        </FormGroup>\n\n                    </CardBody>\n                </Card>\n\n                <ActionGroup>\n                    <Button onClick={submitForm} variant=\"primary\">\n                        Submit\n                    </Button>\n                    <Button onClick={props.triggerReturn} variant=\"link\">\n                        Cancel\n                    </Button>\n                </ActionGroup>\n            </Form>\n\n\n\n        </div>\n    )\n}\n/**\n * Saving this in case deemed neccessary. This was on UGC but account api doesnt accept it.\n * <Card>\n *                     <CardHeader>\n *                         Preferred Language\n *                     </CardHeader>\n *                     <CardBody>\n *                         <FormGroup>\n *                             <DropdownHandler\n *                                 items={[\"English\", \"Spanish\", \"Mandorin\"]}\n *                                 idValue=\"defaultLanguageDropdown\"\n *                                 defaultText=\"Language\"\n *                                 onSelect={handleDropDown}\n *                             />\n *                         </FormGroup>\n *                         <FormGroup>\n *                             <DropdownHandler\n *                                 items={[\"EST\", \"PST\", \"Central\"]}\n *                                 idValue=\"timezoneDropdown\"\n *                                 defaultText=\"Time Zone\"\n *                                 onSelect={handleDropDown}\n *                             />\n *                         </FormGroup>\n *                     </CardBody>\n *                 </Card>\n */\n\nexport default AddUser;\n","import './UserManagementController.scss';\nimport React, {useEffect, useState, createContext} from 'react';\nimport {PageHeader, PageHeaderTitle} from \"@redhat-cloud-services/frontend-components/PageHeader\";\nimport {Divider, PageSection} from \"@patternfly/react-core\";\nimport UserList from \"./UserList\";\nimport AddUser from './modifyUser/AddUser'\nimport {isAdminUser} from \"../utils/general-utils\";\nimport DisabledPage from \"../disabledPage/disabled-page\";\n\nexport const QueryContext = createContext(null);\n\nconst UserManagementController = (props) => {\n\n    let targetSSO;\n\n    if(window.location.host === \"stage.foo.redhat.com:1337\" || window.location.host === \"console.stage.redhat.com\"){\n        targetSSO = \"https://account.stage.api.redhat.com/v1/accounts\";\n    }\n    else{\n        targetSSO = \"https://api.access.redhat.com/account/v1/accounts\";\n    }\n\n    targetSSO = \"https://localhost:8443/v1/accounts\";\n\n    // stores the required information produce queries. Gets stuffed into the context for use in other modules.\n    const [queryDetails, setQueryDetails] = useState({\n        accountAPI: targetSSO,\n        accountID: \"\",\n        userToken: \"\"\n    });\n\n    const [displayedPage, setDisplayedPage] = useState({\n        userList: true,\n        addUser: false,\n        editUser: false\n    })\n\n    // needed to pass edit target from the userList to the addPage. editTarget will be a string with the user's id\n    const [editTarget, setEditTarget] = useState()\n\n    /**\n     * pulls the user's account list for this user from the account api service\n     */\n    const getAccountId = () => {\n        insights.chrome.auth.getToken().then(token => {\n            setQueryDetails({...queryDetails, userToken: token})\n            // trigger fetch with the existing user's token\n            fetch(queryDetails.accountAPI, {\n                method: 'GET',\n                headers:{\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + token\n                }\n            })\n                .then(response => response.json())\n                .then(data => {\n                    let accountData = data[\"body\"][0];\n                    setQueryDetails({...queryDetails, accountID: accountData.id})\n                })\n        });\n    }\n\n    /**\n     * Passed via props to the userlist to govern the displaying of the addUser page.\n     */\n    const showAddUserPage = () => {\n        setDisplayedPage({\n            userList: false,\n            addUser: true,\n            editUser: false\n        })\n    }\n\n\n    /**\n     * Passed via props to the userlist to govern the displaying of the addUser page.\n     */\n    const showEditUserPage = () => {\n        setDisplayedPage({\n            userList: false,\n            addUser: false,\n            editUser: true\n        })\n    }\n\n    /**\n     * helpful for back/cancel buttons\n     */\n    const showUserListPage = () => {\n        setDisplayedPage({\n            userList: true,\n            addUser: false,\n            editUser: false\n        })\n    }\n\n    /**\n     * used to run the split functionality of what happens when an edit is triggered.\n     * @param userObject\n     */\n    const handleEditSelection = (userObject) => {\n        setEditTarget(userObject)\n        showEditUserPage();\n    }\n\n\n    /**\n     * conditional statement to handle the async nature of the initial js queries\n     */\n    const BaseRender = () => {\n        if(queryDetails.accountID && queryDetails.accountID.length > 0){\n            if(displayedPage.userList){\n                return <UserList\n                            triggerAddUser={showAddUserPage}\n                            triggerEditUser={handleEditSelection}\n                            triggerCancel={showUserListPage}\n                        />;\n            }\n            else if(displayedPage.addUser) {\n                return <AddUser triggerReturn={showUserListPage}/>;\n            }\n            else if(displayedPage.editUser) {\n                return <AddUser triggerReturn={showUserListPage} editingUser={editTarget} />\n            }\n        }\n        else{\n            return <div>Loading Spinner...</div>\n        }\n    }\n\n    useEffect(() => {\n        getAccountId();\n    },[]);\n\n    return (\n        <div>\n            <PageHeader>\n                <PageHeaderTitle title=\"User Management\" className=\"pf-u-mb-lg\" />\n                <p> Manage organization users and privelages</p>\n            </PageHeader>\n            <Divider/>\n            <PageSection>\n                <QueryContext.Provider value={queryDetails}>\n                    <BaseRender/>\n                </QueryContext.Provider>\n            </PageSection>\n\n        </div>\n\n    )\n}\n\nexport default UserManagementController;\n","import React, { useState, useEffect } from 'react';\nimport UserManagementController from \"../../Components/userManagement/UserManagementController\";\nimport {useFlag} from \"@unleash/proxy-client-react\";\nimport {isAdminUser} from \"../../Components/utils/general-utils\";\nimport DisabledPage from \"../../Components/disabledPage/disabled-page\";\n\n\nconst UserManagement = (props) => {\n    var userToken = null;\n    const [currentUser, updateUser] = useState({\n        adminUser: true,\n        renderedPage: <UserManagementController />\n    })\n    var isSelfServiceIDPEnabled = true; //useFlag('iamconsole.IDPIntegration.enabled');\n\n    useEffect(() => {\n        //insights?.chrome?.appAction?.('identity-provider-integration');\n        insights.chrome.auth.getToken().then(token => {\n            userToken = token;\n            // if the user is in fact and admin user then render TwoFactorCheck\n            if(isAdminUser(userToken) && isSelfServiceIDPEnabled){\n                updateUser({\n                    adminUser: true,\n                    renderedPage: <UserManagementController />\n                })\n            }\n\n            // check to see if 2fa feature flag is set. if not then render the proper error page\n            if (!isSelfServiceIDPEnabled) {\n                updateUser({\n                    adminUser: false,\n                    renderedPage: <DisabledPage/>\n                })\n            }\n\n        })\n    }, []);\n\n\n    return (\n        <React.Fragment>\n            {currentUser.renderedPage}\n        </React.Fragment>\n    )\n}\n\nexport default UserManagement;\n","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/** @license React v17.0.2\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';require(\"object-assign\");var f=require(\"react\"),g=60103;exports.Fragment=60107;if(\"function\"===typeof Symbol&&Symbol.for){var h=Symbol.for;g=h(\"react.element\");exports.Fragment=h(\"react.fragment\")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,k){var b,d={},e=null,l=null;void 0!==k&&(e=\"\"+k);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(l=a.ref);for(b in a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["LockIcon","name","height","width","svgPath","yOffset","xOffset","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","_a","className","children","props","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","pageHeaderClasses","theme","_b","themeClasses","concat","title","pageHeaderTitleClasses","Title","headingLevel","size","Text","isAdminUser","token","base64","split","replace","jsonPayload","JSON","parse","decodeURIComponent","window","atob","map","c","charCodeAt","toString","slice","join","is_org_admin","setStateValue","value","key","stateObject","updateFunction","updatedValue","processAllInputs","selections","validations","setValidations","failureTriggered","update","keys","forEach","validationKey","submittedValue","submittedType","inputType","verificationObject","input","type","required","status","message","verified","results","test","verifyInput","queryDetails","useContext","QueryContext","useState","listData","setListData","checkedUsers","setCheckedUsers","perPageValue","setPerPageValue","currentPage","setCurrentPage","resultsCount","useEffect","targetUrl","accountAPI","accountID","URLSearchParams","firstResultIndex","maxResults","fetch","method","headers","userToken","then","response","json","userList","body","checkReference","userObj","user","username","checked","id","disableUser","targetForDisable","checkedList","stringify","resp","location","reload","editUser","targetForEdit","triggerEditUser","handleNextPageClick","handlePrevPageClick","ConditionRender","Toolbar","ToolbarContent","ToolbarItem","SearchInput","Button","onClick","triggerAddUser","variant","TableComposable","Thead","Tr","Th","select","onSelect","_event","isSelecting","isSelected","doNothing","modifier","info","tooltip","Tbody","userRecord","rowIndex","Td","Checkbox","onChange","val","existing","isChecked","email","lastName","firstName","Pagination","perPageComponent","widgetId","itemCount","perPage","PaginationVariant","onPerPageSelect","selection","onNextClick","onPreviousClick","page","React","isDDOpen","setIsDDOpen","defaultText","setSelection","Dropdown","document","getElementById","idValue","focus","toggle","DropdownToggle","onToggle","isOpen","dropdownItems","items","DropdownItem","alerts","setAlerts","isEditMode","setIsEditMode","salutation","address","city","country","county","state","streets","zipCode","permissions","phone","roles","formData","setFormData","editingUser","portal_manage_subscriptions","portal_download","portal_system_management","portal_manage_cases","admin","permsChecks","setPermsChecks","handleStreets","position","streetArray","addressObject","handleAddress","addressData","handlePermsCheckBox","boxId","existingPerms","permsKeys","saveablePermsList","push","Form","AlertGroup","isLiveRegion","Card","CardHeader","CardBody","FormGroup","label","TextInput","Divider","component","ActionGroup","console","log","updatedForm","Alert","timeout","errors","getElementsByClassName","scrollTop","triggerReturn","createContext","host","setQueryDetails","addUser","displayedPage","setDisplayedPage","editTarget","setEditTarget","showAddUserPage","showUserListPage","handleEditSelection","userObject","BaseRender","triggerCancel","insights","chrome","auth","getToken","data","accountData","PageHeader","PageHeaderTitle","PageSection","Provider","adminUser","renderedPage","currentUser","updateUser","hasOwn","classNames","classes","arg","argType","Array","isArray","inner","module","exports","default","propIsEnumerable","test1","String","getOwnPropertyNames","test2","fromCharCode","test3","letter","err","shouldUseNative","target","source","from","symbols","to","TypeError","toObject","f","g","Symbol","for","h","m","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","ref","__self","__source","q","a","k","b","d","l","defaultProps","$$typeof","_owner","current","jsx","jsxs","_slicedToArray","arr","_i","iterator","_s","_e","_arr","_n","_d","next","done","unsupportedIterableToArray"],"sourceRoot":""}