{"version":3,"file":"js/73.xxxxxxxxxxxxxxxxxxxx.js","mappings":"4FAEIA,EAAI,EAAQ,OAEdC,EAAQ,EAAaD,EAAEE,WACDF,EAAEG,W,mHCAnB,SAASC,KAAQC,GAMtB,OALiB,OAAY,CAAC,EAAG,CAC/B,MACA,EAAAC,EAAA,IAAwB,CAAEC,oBAAqB,CAAC,SAAU,cACvDF,GAGP,C,mCCPA,MAAMG,GAAW,IAAAC,OAAK,IACpB,iCAEIC,GAAoB,IAAAD,OAAK,IAC7B,iCAIIE,GAAc,IAAAF,OAAK,IACvB,0EAKIG,GAAiB,IAAAH,OAAK,IAC1B,yEAKII,GAAiB,IAAAJ,OAAK,IACxB,4FAaSK,EAAS,IACpB,kBAAC,EAAAC,SAAQ,CACPC,SACE,kBAACC,EAAA,EAAQ,KACP,kBAACC,EAAA,EAAO,QAIZ,kBAAC,SAAY,KACT,kBAAC,EAAAC,MAAK,CAACC,KAAK,OAAOC,QAAS,kBAACb,EAAQ,QACrC,kBAAC,EAAAW,MAAK,CAACC,KAAK,iBAAiBC,QAAS,kBAACX,EAAiB,QACxD,kBAAC,EAAAS,MAAK,CAACC,KAAK,2BAA2BC,QAAS,kBAACV,EAAW,QAC5D,kBAAC,EAAAQ,MAAK,CAACC,KAAK,kCAAkCC,QAAS,kBAACT,EAAc,QACtE,kBAAC,EAAAO,MAAK,CAACC,KAAK,oBAAoBC,QAAS,kBAACR,EAAc,QAExD,kBAAC,EAAAM,MAAK,CAACC,KAAK,IAAIC,QAAS,kBAACb,EAAQ,U,qCC5C1C,MAkBA,EAlBY,KACR,MAAM,oBAACc,IAAuB,EAAAC,EAAA,KAS9B,OAPA,IAAAC,YAAU,MACW,SACRC,SAAS,CAAEC,cAAe,OAEnCJ,EAAoB,cAAc,GACnC,IAGC,kBAAC,EAAAK,SAAQ,KACL,kBAAC,KAAmB,MACpB,kBAACb,EAAM,MAEd,E,SCnBL,MCFMc,EAAYC,SAASC,eAAe,SAC7B,OAAWF,GAEnBG,OAAO,mBDDK,IACb,kBAAC,KAAQ,CACLC,MAAO5B,IAGL6B,YAEF,kBAAC,EAAG,QCNS,OACrBL,EAAWM,aAAa,iBAAkB,O","sources":["webpack:///./node_modules/react-dom/client.js","webpack:///./src/store/index.ts","webpack:///./src/Routes.tsx","webpack:///./src/App.tsx","webpack:///./src/AppEntry.tsx","webpack:///./src/bootstrap.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { Middleware, Reducer } from 'redux';\n\nexport function init(...middleware :Middleware[]) {\n  const registry = getRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({ errorDescriptionKey: ['detail', 'stack'] }),\n    ...middleware,\n  ]);\n  return registry;\n}\n","import React, { Suspense, lazy } from 'react';\nimport { Route, Routes as RouterRoutes} from 'react-router-dom';\n\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst OopsPage = lazy(() =>\n  import(/* webpackChunkName: \"OopsPage\" */ './Routes/OopsPage/OopsPage')\n);\nconst NoPermissionsPage = lazy(() =>\n  import(\n    /* webpackChunkName: \"NoPermissionsPage\" */ './Routes/NoPermissionsPage/NoPermissionsPage'\n  )\n);\nconst AuthFactors = lazy(() => \n  import(\n    /* webpackChunkName: \"Authentication-Factors\"*/ './Routes/Authentication-Policy/Authentication-Factors'\n  )\n);\n\nconst IdpIntegration = lazy(() =>\n  import(\n     /* webpackChunkName: \"Identity-Provider-Integration\"*/ './Routes/Authentication-Policy/Identity-Provider-Integration'\n  )\n)\n\nconst UserManagement = lazy(() =>\n    import(\n        /* webpackChunkName: \"User-Management\"*/ './Routes/Authentication-Policy/User-Management'\n        )\n)\n\n/**\n * the Switch component changes routes depending on the path.\n *\n * Route properties:\n *      exact - path must match exactly,\n *      path - https://prod.foo.redhat.com:1337/insights/advisor/rules\n *      component - component to be rendered when a route has been chosen.\n */\nexport const Routes = () => (\n  <Suspense\n    fallback={\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    }\n  >\n    <RouterRoutes>\n        <Route path=\"oops\" element={<OopsPage/>} />\n        <Route path=\"no-permissions\" element={<NoPermissionsPage/>} />\n        <Route path=\"authentication-factors/*\" element={<AuthFactors/>} />\n        <Route path=\"identity-provider-integration/*\" element={<IdpIntegration/>}/>\n        <Route path=\"user-management/*\" element={<UserManagement/>}/>\n      {/* Finally, catch all unmatched routes */}\n        <Route path=\"*\" element={<OopsPage/>} />\n    </RouterRoutes>\n  </Suspense>\n);\n","import React, { Fragment, useEffect } from 'react';\nimport { Routes } from './Routes';\nimport './App.scss';\nimport { Reducer } from 'redux';\n\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst App = () => {\n    const {updateDocumentTitle} = useChrome();\n\n    useEffect(() => {\n        const registry = getRegistry();\n        registry.register({ notifications: notificationsReducer as unknown as Reducer});\n\n        updateDocumentTitle(\"IAM Console\");\n    }, []);\n\n    return (\n        <Fragment>\n            <NotificationsPortal />\n            <Routes />\n        </Fragment>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { init } from './store';\nimport App from './App';\nimport logger from 'redux-logger';\n\nconst AppEntry = () => (\n    <Provider\n        store={init(\n            // eslint-disable-next-line no-undef\n            ...(process.env.NODE_ENV !== 'production' ? [logger] : [])\n        ).getStore()}\n    >\n        <App />\n\n    </Provider>\n);\n\nexport default AppEntry;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport AppEntry from './AppEntry';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container!);\n\nroot.render(<AppEntry />);\ncontainer!.setAttribute('data-ouia-safe', \"true\")\n"],"names":["m","exports","createRoot","hydrateRoot","init","middleware","notificationsMiddleware","errorDescriptionKey","OopsPage","lazy","NoPermissionsPage","AuthFactors","IdpIntegration","UserManagement","Routes","Suspense","fallback","Bullseye","Spinner","Route","path","element","updateDocumentTitle","useChrome","useEffect","register","notifications","Fragment","container","document","getElementById","render","store","getStore","setAttribute"],"sourceRoot":""}