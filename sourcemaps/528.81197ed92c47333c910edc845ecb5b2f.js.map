{"version":3,"file":"js/528.5b80ecd2e2aeb5033aca.js","mappings":"iMA2BA,QAlBY,WACR,IAAOA,GAAuBC,EAAAA,EAAAA,KAAvBD,oBASP,OAPAE,EAAAA,EAAAA,YAAU,YACWC,EAAAA,EAAAA,MACRC,SAAS,CAAEC,cAAeC,EAAAA,KAEnCN,EAAoB,cACvB,GAAE,IAGC,kBAAC,EAAAO,SAAD,KACI,kBAAC,KAAD,MACA,kBAAC,IAAD,MAGX,C,qHCPD,QAZiB,kBACb,kBAAC,KAAD,CACIC,MAAOC,EAAAA,EAAAA,WAAA,UAEoD,KACzDC,YAEF,kBAAC,IAAD,MAPS,C,2ECDXC,GAAWC,EAAAA,EAAAA,OAAK,kBACpB,4BADoB,IAIhBC,GAAoBD,EAAAA,EAAAA,OAAK,kBAC7B,6BAD6B,IAKzBE,GAAcF,EAAAA,EAAAA,OAAK,kBACvB,6BADuB,IAMZG,EAAS,kBACpB,kBAAC,EAAAC,SAAD,CACEC,SACE,kBAAC,EAAAC,SAAD,KACE,kBAAC,EAAAC,QAAD,QAIJ,kBAAC,SAAD,KACE,kBAAC,EAAAC,MAAD,CAAOC,KAAK,OAAOC,QAAS,kBAACX,EAAD,QAC5B,kBAAC,EAAAS,MAAD,CAAOC,KAAK,iBAAiBC,QAAS,kBAACT,EAAD,QACtC,kBAAC,EAAAO,MAAD,CAAOC,KAAK,2BAA2BC,QAAS,kBAACR,EAAD,QAE9C,kBAAC,EAAAM,MAAD,CAAOC,KAAK,IAAIC,QAAS,kBAACR,EAAD,SAbX,C,4ECdf,SAASL,IAAoB,2BAAZc,EAAY,yBAAZA,EAAY,gBAMlC,OALWpB,EAAAA,EAAAA,IAAY,CAAC,EAAF,CACpBqB,KACAC,EAAAA,EAAAA,IAAwB,CAAEC,oBAAqB,CAAC,SAAU,YAFtC,OAGjBH,GAGN,C","sources":["webpack:///./src/App.js","webpack:///./src/AppEntry.js","webpack:///./src/Routes.js","webpack:///./src/store/index.js"],"sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { Routes } from './Routes';\nimport './App.scss';\n\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst App = () => {\n    const {updateDocumentTitle} = useChrome();\n\n    useEffect(() => {\n        const registry = getRegistry();\n        registry.register({ notifications: notificationsReducer });\n\n        updateDocumentTitle(\"IAM Console\");\n    }, []);\n\n    return (\n        <Fragment>\n            <NotificationsPortal />\n            <Routes />\n        </Fragment>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { init } from './store';\nimport App from './App';\nimport logger from 'redux-logger';\n\nconst AppEntry = () => (\n    <Provider\n        store={init(\n            // eslint-disable-next-line no-undef\n            ...(process.env.NODE_ENV !== 'production' ? [logger] : [])\n        ).getStore()}\n    >\n        <App />\n\n    </Provider>\n);\n\nexport default AppEntry;\n","import React, { Suspense, lazy } from 'react';\nimport { Route, Routes as RouterRoutes} from 'react-router-dom';\n\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst OopsPage = lazy(() =>\n  import(/* webpackChunkName: \"OopsPage\" */ './Routes/OopsPage/OopsPage')\n);\n\nconst NoPermissionsPage = lazy(() =>\n  import(\n    /* webpackChunkName: \"NoPermissionsPage\" */ './Routes/NoPermissionsPage/NoPermissionsPage'\n  )\n);\nconst AuthFactors = lazy(() => \n  import(\n    /* webpackChunkName: \"Authentication-Factors\"*/ './Routes/Authentication-Policy/Authentication-Factors'\n  )\n);\n\nexport const Routes = () => (\n  <Suspense\n    fallback={\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    }\n  >\n    <RouterRoutes>\n      <Route path=\"oops\" element={<OopsPage/>} />\n      <Route path=\"no-permissions\" element={<NoPermissionsPage/>} />\n      <Route path=\"authentication-factors/*\" element={<AuthFactors/>} />\n      {/* Finally, catch all unmatched routes */}\n        <Route path=\"*\" element={<AuthFactors/>} />\n    </RouterRoutes>\n  </Suspense>\n);\n","import { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\n\nexport let registry;\n\nexport function init(...middleware) {\n  registry = getRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({ errorDescriptionKey: ['detail', 'stack'] }),\n    ...middleware,\n  ]);\n  return registry;\n}\n"],"names":["updateDocumentTitle","useChrome","useEffect","getRegistry","register","notifications","notificationsReducer","Fragment","store","init","getStore","OopsPage","lazy","NoPermissionsPage","AuthFactors","Routes","Suspense","fallback","Bullseye","Spinner","Route","path","element","middleware","promiseMiddleware","notificationsMiddleware","errorDescriptionKey"],"sourceRoot":""}