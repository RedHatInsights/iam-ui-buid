(self.webpackChunkiam=self.webpackChunkiam||[]).push([[600],{8994:(e,t,n)=>{"use strict";n.d(t,{A:()=>c});var r=n(1680),a=n.n(r),i=n(2021),o=n(2069),l=n(7334);const c=()=>a().createElement("div",{className:"disabledDiv"},a().createElement(l.Ay,{className:"lockIcon"}),a().createElement(i.h,{headingLevel:"h2",size:"xl",className:"pf-u-mt-lg"},"This page is temporarily disabled or unavailable at this time"),a().createElement(o.E,{className:"pf-u-mt-lg"},"Please check again at a another time or reach out to Red Hat customer service for additional support"))},3978:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>fe});var r=n(1680),a=n.n(r),i=n(8072),o=n(7851),l=n(4209),c=n(7546),s=n(2069),d=n(3539),m=n(2021),u=n(3133),p=n(6780),h=n(4747),E=n(5556),v=n.n(E);const f=({resetNextClicked:e,rootUserChoices:t,rootValidation:n,updateStatus:i})=>{const[o,l]=(0,r.useState)({protocol:{inputType:"RADIO",status:"default",message:""}});return a().createElement(u.l,null,a().createElement(m.h,{headingLevel:"h2"},"Customer Information"),a().createElement(s.E,{className:"pf-v5-u-color-400 pf-v5-u-font-size-sm"},"All fields are required"),a().createElement(p.g,{onChange:r=>{(r=>{((e,t,n,r,a,i,o)=>{o(!1),t.current||(t.current={}),t.current.selections||(t.current.selections={}),t.current.selections[e.target.id]=e.target.value;const l=(0,h.SS)(t.current.selections,n,r);a.current||(a.current={}),a.current.CUST_INFO=!l,!l&&t.current.selections.protocol&&i(t.current.selections.protocol)})(r,t,o,l,n,i,e)})(r)},role:"radiogroup",fieldId:"authType",label:"Choose identity provider protocol",id:"protocol"},a().createElement(d.s,{name:"authType",id:"protocol",label:"OpenID Connect",value:"OIDC_CONFIG"}),a().createElement(d.s,{name:"authType",id:"protocol",label:"Saml 2.0",value:"SAML_CONFIG"})))};f.propTypes={resetNextClicked:v().func,rootUserChoices:v().object,rootValidation:v().object,nextClicked:v().func,updateStatus:v().func};const I=f;var g=n(3285),C=n(9257),y=n(9937);const S=({updateStatus:e,resetNextClicked:t,rootValidation:n,rootUserChoices:i})=>{const[o,l]=(0,r.useState)(),[c,m]=(0,r.useState)({clientId:{inputType:"GENERAL",status:"default",message:""},clientSecret:{inputType:"GENERAL",status:"default",message:""},inputMethod:{inputType:"RADIO",status:"default",message:""}}),E=r=>{t(!1),i.current.selections[r.target.id]=r.target.value;const a=(0,h.SS)(i.current.selections,c,m);n.current.OIDC_CONFIG=!a,!a&&i.current.selections.inputMethod&&e(i.current.selections.inputMethod)};return a().createElement(u.l,null,a().createElement(s.E,{className:"pf-v5-u-color-400 pf-v5-u-font-size-sm"},"All fields are required"),a().createElement(p.g,{label:"Client ID/SP entity ID",onChange:e=>{E(e)}},a().createElement(g.ks,{onChange:(e,t)=>(0,h.Xr)(t,"clientId",o,l),type:"text",id:"clientId"}),a().createElement(C.E,null,a().createElement(y.j,null,"The Red Hat client identifier registered within the customer identity provider. Your indentity provider generates this client ID when a Red Hat client is added"))),a().createElement(p.g,{label:"Client Secret",onChange:e=>{E(e)}},a().createElement(g.ks,{onChange:(e,t)=>(0,h.Xr)(t,"clientSecret",o,l),type:"text",id:"clientSecret"}),a().createElement(C.E,null,a().createElement(y.j,null,"Enter the client secret associated with your client identifier  by your identity provider"))),a().createElement(p.g,{onChange:e=>{E(e)},label:"Load external IDP metadata from a config file or download it from a url"},a().createElement(d.s,{name:"inputChoice",id:"inputMethod",label:"Import from URL",value:"IMPORT_FROM_URL"}),a().createElement(d.s,{name:"inputChoice",id:"inputMethod",label:"Import from file",value:"IMPORT_FROM_FILE"})))};S.propTypes={resetNextClicked:v().func,rootUserChoices:v().object,rootValidation:v().object,nextClicked:v().func,updateStatus:v().func};const b=S,R=({updateStatus:e,resetNextClicked:t,rootValidation:n,rootUserChoices:i})=>{const[o,l]=(0,r.useState)({inputMethod:{inputType:"RADIO",status:"default",message:""}});return a().createElement(u.l,null,a().createElement(p.g,{onChange:r=>{(r=>{t(!1),i.current.selections[r.target.id]=r.target.value;const a=(0,h.SS)(i.current.selections,o,l);n.current.SAML_CONFIG=!a,!a&&i.current.selections.inputMethod&&e(i.current.selections.inputMethod)})(r)},label:"Load external IDP metadata from a config file or download it from a url",isRequired:!0},a().createElement(d.s,{name:"inputChoice",id:"inputMethod",label:"Import from URL",value:"IMPORT_SAML_FROM_URL"}),a().createElement(d.s,{name:"inputChoice",id:"inputMethod",label:"Import from file",value:"IMPORT_SAML_FROM_FILE"})))};R.propTypes={resetNextClicked:v().func,rootUserChoices:v().object,rootValidation:v().object,nextClicked:v().func,updateStatus:v().func};const L=R;var O=n(2382),A=n(8805),F=n.n(A);const M=({updateStatus:e,rootValidation:t,rootUserChoices:n})=>{const[i,o]=(0,r.useState)("");return a().createElement(u.l,null,a().createElement(m.h,{headingLevel:"h2"},"Import from file"),a().createElement(p.g,{label:"File Upload",isRequired:!0},a().createElement(O.e,{value:i.toString(),id:"text-file-with-edits-allowed",type:"text",onDataChange:(r,a)=>{o(a),F().parseString(a,((r,a)=>{r?console.error(r):a&&(e("FINAL_STEP"),n.current.selections.configFileData=a,t.current.IMPORT_FROM_FILE=!0)}))},browseButtonText:"Upload"})),a().createElement(s.E,{className:"pf-v5-u-color-400 pf-v5-u-font-size-sm"},"An XML formatted file detailing the configuration of your IDP, minimally including the OpenID Connect Identity provider discovery URL"))};M.propTypes={rootUserChoices:v().object,rootValidation:v().object,updateStatus:v().func};const N=M,T=({updateStatus:e,resetNextClicked:t,rootValidation:n,rootUserChoices:i})=>{const[o,l]=(0,r.useState)({importURL:{inputType:"DOMAIN",status:"default",message:""}});return a().createElement(u.l,null,a().createElement(m.h,{headingLevel:"h2"},"Import from URL"),a().createElement(p.g,{label:"URL"},a().createElement(g.ks,{type:"text",id:"importURL",onChange:r=>{(r=>{t(!1),i.current.selections[r.currentTarget.id]=r.currentTarget.value;const a=(0,h.SS)(i.current.selections,o,l);n.current.IMPORT_FROM_URL=!a,a||e("FINAL_STEP")})(r)}}),a().createElement(C.E,null,a().createElement(y.j,null,"import metadata from a remote identity provider discovery descriptor"))))};T.propTypes={resetNextClicked:v().func,rootUserChoices:v().object,rootValidation:v().object,nextClicked:v().func,updateStatus:v().func};const _=T,k=({updateStatus:e,rootValidation:t,rootUserChoices:n})=>{const[i,o]=(0,r.useState)("");return a().createElement(u.l,null,a().createElement(m.h,{headingLevel:"h2"},"Import from file"),a().createElement(p.g,{label:"File Upload",isRequired:!0},a().createElement(O.e,{value:i.toString(),id:"text-file-with-edits-allowed",type:"text",filenamePlaceholder:"Drag and drop a file or upload one",onDataChange:(r,a)=>{o(a),F().parseString(a,((r,a)=>{r?console.error("failed to parse xml file: "+r):a&&(e("FINAL_STEP"),n.current.selections.configFileData=a,t.current.IMPORT_SAML_FROM_FILE=!0)}))},browseButtonText:"Upload"})),a().createElement(s.E,{className:"pf-v5-u-color-400 pf-v5-u-font-size-sm"},"A XML formatted file detailing the configuration of your IDP"))};k.propTypes={rootUserChoices:v().object,rootValidation:v().object,updateStatus:v().func};const U=k,D=({updateStatus:e,resetNextClicked:t,rootValidation:n,rootUserChoices:i})=>{const[o,l]=(0,r.useState)({importURL:{inputType:"DOMAIN",status:"default",message:""}});return a().createElement(u.l,null,a().createElement(m.h,{headingLevel:"h2"},"Import from URL"),a().createElement(p.g,{label:"URL"},a().createElement(g.ks,{type:"text",id:"importURL",onChange:r=>{(r=>{t(!1),i.current.selections[r.currentTarget.id]=r.currentTarget.value;const a=(0,h.SS)(i.current.selections,o,l);n.current.IMPORT_SAML_FROM_URL=!a,a||e("FINAL_STEP")})(r)}}),a().createElement(C.E,null,a().createElement(y.j,null,"import metadata from a remote identity provider discovery descriptor"))))};D.propTypes={resetNextClicked:v().func,rootUserChoices:v().object,rootValidation:v().object,nextClicked:v().func,updateStatus:v().func};const P=D;var w=n(6165);const x=({updateStatus:e,redirectDomain:t})=>a().createElement(u.l,null,a().createElement(m.h,{headingLevel:"h2"},"Configure URLs"),a().createElement(s.E,{className:"pf-v5-u-color-400 pf-v5-u-font-size-sm"},"Some Identity Provider Services require additional configuration when enabling third party single sign on. Please review the following information and verify that these are filled in where required in your company IDP."),a().createElement(p.g,{label:"Identifier (Entity ID)"},a().createElement(w.Ck,{isReadOnly:!0,clickTip:"copied"},"https://sso.redhat.com/auth/realms/redhat-external")),a().createElement(p.g,{label:"Sign on URL"},a().createElement(w.Ck,{isReadOnly:!0,clickTip:"copied"},"https://sso.redhat.com/auth/realms/redhat-external/protocol/saml")),a().createElement(p.g,{label:"Redirect URL or ACS (Assertion Consumption Service) URL"},a().createElement(w.Ck,{isReadOnly:!0,clickTip:"copied"},"https://sso.redhat.com/auth/realms/redhat-external/broker/"+{redirectDomain:t}+"/endpoint")));x.propTypes={updateStatus:v().func,redirectDomain:v().string};const G=x;var $=n(4091),z=n(168),j=n(2857),H=n(2583),V=n(1864),q=n(782),W=n(1976),X=n(1358),Y=n(881),B=n(358);const J=({oidcData:e})=>{const t=(0,Y.A)(),n=e=>{const n=(0,h.Gw)(t)+e;window.open(n,"_blank")};return a().createElement(u.l,null,a().createElement(j.F,{variant:"info",isInline:!0,title:"This page currently shows a read-only version of your configuration."},a().createElement("p",null,"Forthcoming enhancements will provide the ability to edit.")),a().createElement(m.h,{headingLevel:"h1"},e.displayName),a().createElement(p.g,{label:"Issuer",fieldId:"oidc-issuer",labelIcon:a().createElement(q.A,{triggerAction:"hover",bodyContent:a().createElement("div",null,"The issuer is used to validate tokens generated by the identity provider and allows additional security for your organization. This value is optional but recommended.")},a().createElement(H.$n,{variant:"plain",type:"button",onClick:e=>e.preventDefault(),className:`customPopover ${B.A.formGroupLabelHelp}`},a().createElement(X.Ay,null)))},a().createElement(w.Ck,{type:"text",id:"oidc-issuer-clipboard",name:"oidc-issuer-clipboard",isReadOnly:!0},e.issuerUrl)),a().createElement(p.g,{label:"Client ID",fieldId:"oidc-client-id",labelIcon:a().createElement(q.A,{triggerAction:"hover",bodyContent:a().createElement("div",null,"The client ID registered with the identity provider.")},a().createElement(H.$n,{variant:"plain",type:"button",onClick:e=>e.preventDefault(),className:`customPopover ${B.A.formGroupLabelHelp}`},a().createElement(X.Ay,null)))},a().createElement(w.Ck,{type:"text",id:"oidc-client-id-clipboard",name:"oidc-client-id-clipboard",isReadOnly:!0},e.clientId),a().createElement(V.e,null,a().createElement(C.E,null,a().createElement(y.j,null,"Spaces and special characters are allowed here.")))),a().createElement(p.g,{label:"Client Secret",fieldId:"oidc-client-secret",labelIcon:a().createElement(q.A,{triggerAction:"hover",bodyContent:a().createElement("div",null,"The client secret registered with the identity provider.")},a().createElement(H.$n,{variant:"plain",type:"button",onClick:e=>e.preventDefault(),className:`customPopover ${B.A.formGroupLabelHelp}`},a().createElement(X.Ay,null)))},a().createElement(w.Ck,{type:"password",id:"oidc-client-id-clipboard",name:"oidc-client-id-clipboard",isReadOnly:!0},e.clientSecret)),a().createElement(p.g,{label:"Authorization URL",fieldId:"oidc-authorization-url-id",labelIcon:a().createElement(q.A,{triggerAction:"hover",bodyContent:a().createElement("div",null,"URL that performs authentication of the end-user.")},a().createElement(H.$n,{variant:"plain",type:"button",onClick:e=>e.preventDefault(),className:`customPopover ${B.A.formGroupLabelHelp}`},a().createElement(X.Ay,null)))},a().createElement(w.Ck,{type:"text",id:"oidc-authorization-url-clipboard",name:"oidc-authorization-url-clipboard",isReadOnly:!0},e.authorizationUrl)),a().createElement(p.g,{label:"Token URL",fieldId:"oidc-token-url-id",labelIcon:a().createElement(q.A,{triggerAction:"hover",bodyContent:a().createElement("div",null,"URL where an authorization code can be exchanged for an access token and ID token.")},a().createElement(H.$n,{variant:"plain",type:"button",onClick:e=>e.preventDefault(),className:`customPopover ${B.A.formGroupLabelHelp}`},a().createElement(X.Ay,null)))},a().createElement(w.Ck,{type:"text",id:"oidc-token-url-clipboard",name:"oidc-token-url-clipboard",isReadOnly:!0},e.tokenUrl)),a().createElement(m.h,{headingLevel:"h3"},"URLs required for identity provider configuration"),a().createElement(W.n,null,a().createElement(s.E,{component:s.Y.p},"Use these URLs to assist in completing setup within your identity provider."),a().createElement("div",{className:"pf-v5-c-inline-edit pf-m-inline-editable pf-u-mb-md"},a().createElement("div",{className:"pf-v5-c-inline-edit__group pf-m-action-group"},a().createElement("div",{className:"pf-v5-c-inline-edit__action"},a().createElement(s.E,{className:"pf-v5-u-active-color-100 customUrl",component:s.Y.p,onClick:()=>n(".well-known/openid-configuration")},"Service provider metadata URL")),a().createElement(q.A,{triggerAction:"hover",bodyContent:a().createElement("div",null,"Service provider metadata used to integrate sso.redhat.com with your identity provider.")},a().createElement(H.$n,{variant:"plain",type:"button",onClick:e=>e.preventDefault(),className:`customPopover ${B.A.formGroupLabelHelp}`},a().createElement(X.Ay,null))))),a().createElement("div",{className:"pf-v5-c-inline-edit pf-m-inline-editable"},a().createElement("div",{className:"pf-v5-c-inline-edit__group pf-m-action-group"},a().createElement("div",{className:"pf-v5-c-inline-edit__action"},a().createElement(s.E,{className:"pf-v5-u-active-color-100 customUrl",component:s.Y.p,onClick:()=>n(`broker/${e.idpAlias}/endpoint`)},"Redirect URL / Assertion Consumption Service (ACS) URL")),a().createElement(q.A,{triggerAction:"hover",bodyContent:a().createElement("div",null,"The redirect URL to use when configuring your identity provider. This represents your company’s SSO Portal where users authenticate to Red Hat.")},a().createElement(H.$n,{variant:"plain",type:"button",onClick:e=>e.preventDefault(),className:`customPopover ${B.A.formGroupLabelHelp}`},a().createElement(X.Ay,null)))))),a().createElement($.l,null,a().createElement(q.A,{triggerAction:"hover","aria-label":"Hoverable popover",headerContent:a().createElement("div",null,"Read-Only"),bodyContent:a().createElement("div",null,"This page currently shows a read-only version of your configuration. Forthcoming enhancements will provide the ability to edit."),footerContent:""},a().createElement(z.a,null,a().createElement(H.$n,{isDisabled:!0},"Save"))),a().createElement(z.a,null,a().createElement(H.$n,{isDisabled:!0,variant:"link"},"Cancel"))))},Z=({samlData:e})=>{const t=(0,Y.A)(),n=e=>{const n=(0,h.Gw)(t)+e;window.open(n,"_blank")};return a().createElement(u.l,null,a().createElement(j.F,{variant:"info",isInline:!0,title:"This page currently shows a read-only version of your configuration."},a().createElement("p",null,"Forthcoming enhancements will provide the ability to edit.")),a().createElement(m.h,{headingLevel:"h1"},e.displayName),a().createElement(p.g,{label:"Identity provider entityID",fieldId:"saml-entity-id",labelIcon:a().createElement(q.A,{triggerAction:"hover",bodyContent:a().createElement("div",null,"The entityID used to validate the Issuer for received SAML assertions.")},a().createElement(H.$n,{variant:"plain",type:"button",onClick:e=>e.preventDefault(),className:`customPopover ${B.A.formGroupLabelHelp}`},a().createElement(X.Ay,null)))},a().createElement(w.Ck,{type:"text",id:"saml-entity-id-clipboard",name:"saml-entity-id-clipboard",isReadOnly:!0},e.identityProviderEntityId),a().createElement(V.e,null,a().createElement(C.E,null,a().createElement(y.j,null,"The entityID attribute can be found in your SAML metadata configuration")))),a().createElement(p.g,{label:"Single sign-on authentication request URL",fieldId:"saml-authn-request-url"},a().createElement(w.Ck,{type:"text",id:"saml-authn-request-url-clipboard",name:"saml-authn-request-url-clipboard",isReadOnly:!0},e.authenticationRequestsUrl),a().createElement(V.e,null,a().createElement(C.E,null,a().createElement(y.j,null,"The URL that will be used to send SAML authentication requests.")))),a().createElement(p.g,{label:"x509 certificate",fieldId:"saml-x509-certificate",labelIcon:a().createElement(q.A,{triggerAction:"hover",bodyContent:a().createElement("div",null,"A PEM certificate that is used to check for signatures.")},a().createElement(H.$n,{variant:"plain",type:"button",onClick:e=>e.preventDefault(),className:`customPopover ${B.A.formGroupLabelHelp}`},a().createElement(X.Ay,null)))},a().createElement(w.Ck,{id:"saml-x509-certificate-clipboard",name:"saml-x509-certificate-clipboard",variant:w.$X.expansion,isReadOnly:!0},e.x509Certificate),a().createElement(V.e,null,a().createElement(C.E,null,a().createElement(y.j,null,"A Base64 encoded certificate must not include the certificate preamble/ending:",a().createElement("code",null,"(-----BEGIN/END CERTIFICATE-----)"))))),a().createElement(m.h,{headingLevel:"h3"},"URLs required for identity provider configuration"),a().createElement(W.n,null,a().createElement(s.E,{component:s.Y.p},"Use these URLs to assist in completing setup within your identity provider."),a().createElement("div",{className:"pf-v5-c-inline-edit pf-m-inline-editable pf-u-mb-md"},a().createElement("div",{className:"pf-v5-c-inline-edit__group pf-m-action-group"},a().createElement("div",{className:"pf-v5-c-inline-edit__action"},a().createElement(s.E,{className:"pf-v5-u-active-color-100 customUrl",component:s.Y.p,onClick:()=>n(`broker/${e.idpAlias}/endpoint/descriptor`)},"Service provider metadata URL")),a().createElement(q.A,{triggerAction:"hover",bodyContent:a().createElement("div",null,"Service provider metadata used to integrate sso.redhat.com with your identity provider.")},a().createElement(H.$n,{variant:"plain",type:"button",onClick:e=>e.preventDefault(),className:`customPopover ${B.A.formGroupLabelHelp}`},a().createElement(X.Ay,null))))),a().createElement("div",{className:"pf-v5-c-inline-edit pf-m-inline-editable"},a().createElement("div",{className:"pf-v5-c-inline-edit__group pf-m-action-group"},a().createElement("div",{className:"pf-v5-c-inline-edit__action"},a().createElement(s.E,{className:"pf-v5-u-active-color-100 customUrl",component:s.Y.p,onClick:()=>n(`broker/${e.idpAlias}/endpoint`)},"Redirect URL / Assertion Consumption Service (ACS) URL")),a().createElement("div",{className:"pf-v5-c-inline-edit__action "},a().createElement(q.A,{triggerAction:"hover",bodyContent:a().createElement("div",null,"The redirect URL to use when configuring your identity provider. This represents your company’s SSO Portal where users authenticate to Red Hat.")},a().createElement(H.$n,{variant:"plain",type:"button",onClick:e=>e.preventDefault(),className:`customPopover ${B.A.formGroupLabelHelp}`},a().createElement(X.Ay,null))))))),a().createElement($.l,null,a().createElement(q.A,{triggerAction:"hover","aria-label":"Hoverable popover",headerContent:a().createElement("div",null,"Read-Only"),bodyContent:a().createElement("div",null,"This page currently shows a read-only version of your configuration. Forthcoming enhancements will provide the ability to edit."),footerContent:""},a().createElement(z.a,null,a().createElement(H.$n,{isDisabled:!0},"Save"))),a().createElement(z.a,null,a().createElement(H.$n,{isDisabled:!0,variant:"link"},"Cancel"))))};var K=n(915),Q=n(983),ee=n(5081);const te=({responseData:e})=>{const[t,n]=(0,r.useState)(a().createElement(ee.y,null));return(0,r.useEffect)((()=>{"saml-improved"===e.providerId?n(a().createElement(Z,{samlData:e})):"oidc-improved"===e.providerId&&n(a().createElement(J,{oidcData:e}))}),[e]),a().createElement(a().Fragment,null,a().createElement(K.Z,{isCompact:!1,isLarge:!0},a().createElement(Q.b,null,t)))};var ne=n(3913);const re=({setupIDP:e,wizardEnabled:t})=>a().createElement("div",{className:"notSetupDiv"},a().createElement(ne.Ay,{className:"cubesIcon"}),a().createElement(m.h,{headingLevel:"h2",size:"xl",className:"pf-v5-u-mt-lg"},"No Identity Providers are currently configured"),a().createElement(s.E,{className:"pf-v5-u-mt-md"},"Your organization has not integrated an identity provider. More information is available ",a().createElement(H.$n,{variant:"link",target:"_blank",href:"https://access.redhat.com/announcements/7039300",component:"a",isInline:!0},"here")),a().createElement(H.$n,{className:t?"pf-v5-u-mt-lg":"hideFeature",variant:"primary",onClick:e},"Set up an identity provider"));re.propTypes={setupIDP:v().func};const ae=re;var ie=n(4698),oe=n(4501);const le=({valid:e,next:t,previous:n})=>{const{goToNextStep:r,goToPrevStep:i}=(0,ie.CV)();return a().createElement(oe.W,null,a().createElement(H.$n,{onClick:()=>{e?r():t(!0)},disabled:e},"Next"),a().createElement(H.$n,{variant:"secondary",onClick:()=>{i(),n()}},"Back"))},ce=({userChoiceData:e,previous:t})=>{const{goToNextStep:n,goToPrevStep:r}=(0,ie.CV)(),[i,o]=a().useState(!1);return a().createElement(oe.W,null,a().createElement(H.$n,{onClick:async()=>{console.log("Submitting with this data: "+JSON.stringify(e,null,2)),o(!0),await new Promise((e=>setTimeout(e,2e3))),o(!1),n(),window.location.reload()},isLoading:i},"Next"),a().createElement(H.$n,{variant:"secondary",onClick:()=>{r(),t()}},"Back"))};ce.propTypes={userChoiceData:v().object};const se=ce;var de=n(7565),me=n(1903);const ue=({accessToken:e})=>{const t=(0,r.useRef)({selections:{}}),[n,d]=(0,r.useState)(!1),[m,u]=(0,r.useState)(!0),[p,E]=(0,r.useState)(!0),v=(0,h.J1)((0,Y.A)(),"apis/organizations/v1/identity-providers"),[f,g]=(0,r.useState)({idpAlias:"",providerId:"",displayName:"",enabled:""}),C=(0,me.useFlag)("iamconsole.IDPIntegration.wizardFlowEnabled");(0,r.useEffect)((()=>{fetch(v,{method:"GET",referrerPolicy:"no-referrer",headers:{"Content-Type":"application/json",Authorization:"Bearer "+e}}).then((e=>e.json())).then((e=>{"oidc-improved"===e.providerId||"saml-improved"===e.providerId?(g(e),u(!1),d(!0)):e.error&&(u(!1),d(!1))})).catch((e=>{console.error("Error: ",e),u(!1)}))}),[]);const y=(0,r.useRef)({CUST_INFO:!1,OIDC_CONFIG:!1,SAML_CONFIG:!1,IMPORT_FROM_FILE:!1,IMPORT_FROM_URL:!1,IMPORT_SAML_FROM_FILE:!1,IMPORT_SAML_FROM_URL:!1}),[S,R]=(0,r.useState)({currentState:"CUSTOMERINFORMATION",previousState:""}),[O,A]=(0,r.useState)({hideCustomerInformation:!1,hideOIDC:!0,hideSAML:!0,hideImportFromURL:!0,hideImportFromFile:!0,hideFinish:!0}),[F,M]=(0,r.useState)(!1),T=e=>{let t;switch(e){case"OIDC_CONFIG":t={...O},t.hideOIDC=!1,A(t),R({currentState:e,previousState:"CUSTOMER_INFORMATION"});break;case"SAML_CONFIG":t={...O},t.hideSAML=!1,A(t),R({currentState:e,previousState:"CUSTOMER_INFORMATION"});break;case"IMPORT_FROM_FILE":t={...O},t.hideImportFromFile=!1,A(t),R({currentState:e,previousState:"OIDC_CONFIG"});break;case"IMPORT_FROM_URL":t={...O},t.hideImportFromURL=!1,A(t),R({currentState:e,previousState:"OIDC_CONFIG"});break;case"IMPORT_SAML_FROM_FILE":t={...O},t.hideImportFromFile=!1,A(t),R({currentState:e,previousState:"SAML_CONFIG"});break;case"IMPORT_SAML_FROM_URL":t={...O},t.hideImportFromURL=!1,A(t),R({currentState:e,previousState:"SAML_CONFIG"});break;case"FINAL_STEP":t={...O},t.hideFinish=!1,A(t),R({currentState:e,previousState:S.currentState});break;default:A({hideCustomerInformation:!1,hideOIDC:!0,hideSAML:!0,hideImportFromURL:!0,hideImportFromFile:!0,hideFinish:!0})}},k=e=>{const n=Object.keys(t.current.selections);for(let r=0;r<n.length;r++)e.includes(n[r])||delete t.current.selections[n[r]]},D=()=>{(e=>{switch(e){case"OIDC_CONFIG":k(["protocol"]),R({currentState:e,previousState:"CUSTOMER_INFORMATION"}),A({hideCustomerInformation:!1,hideOIDC:!1,hideSAML:!0,hideImportFromURL:!0,hideImportFromFile:!0,hideFinish:!0});break;case"SAML_CONFIG":k(["protocol"]),R({currentState:e,previousState:"CUSTOMER_INFORMATION"}),A({hideCustomerInformation:!1,hideOIDC:!0,hideSAML:!1,hideImportFromURL:!0,hideImportFromFile:!0,hideFinish:!0});break;case"IMPORT_FROM_FILE":k(["clientId","clientSecret","inputMethod","protocol"]),R({currentState:e,previousState:"OIDC_CONFIG"}),A({hideCustomerInformation:!1,hideOIDC:!1,hideSAML:!0,hideImportFromURL:!0,hideImportFromFile:!1,hideFinish:!0});break;case"IMPORT_FROM_URL":k(["clientId","clientSecret","inputMethod","protocol"]),R({currentState:e,previousState:"OIDC_CONFIG"}),A({hideCustomerInformation:!1,hideOIDC:!1,hideSAML:!0,hideImportFromURL:!1,hideImportFromFile:!0,hideFinish:!0});break;case"IMPORT_SAML_FROM_URL":k(["clientId","clientSecret","inputMethod","protocol"]),R({currentState:e,previousState:"SAML_CONFIG"}),A({hideCustomerInformation:!1,hideOIDC:!0,hideSAML:!1,hideImportFromURL:!1,hideImportFromFile:!0,hideFinish:!0});break;case"IMPORT_SAML_FROM_FILE":k(["clientId","clientSecret","inputMethod","protocol"]),R({currentState:e,previousState:"SAML_CONFIG"}),A({hideCustomerInformation:!1,hideOIDC:!0,hideSAML:!1,hideImportFromURL:!0,hideImportFromFile:!1,hideFinish:!0});break;default:k([""]),A({hideCustomerInformation:!1,hideOIDC:!0,hideSAML:!0,hideImportFromURL:!0,hideImportFromFile:!0,hideFinish:!0})}})(S.previousState)};return a().createElement("div",{className:"flowPage"},a().createElement(l.A,{className:"wizardHeader"},a().createElement(c.A,{title:"Identity Provider Integration",className:"pf-v5-u-mb-lg"}),a().createElement(W.n,null,"Manage identity provider integration for your organization."," ",a().createElement(s.E,{component:s.Y.a}))),a().createElement(de.d8,null,a().createElement("div",{className:m?"loadingIcon":"hiddenPage"},a().createElement(ee.y,null)),a().createElement("div",{className:!m&&n?"":"hiddenPage"},a().createElement(te,{responseData:f})),a().createElement("div",{className:m||n||!p?"hiddenPage":"initPage"},a().createElement(ae,{setupIDP:()=>{E(!1)},wizardEnabled:C})),a().createElement("div",{className:n||p?"hiddenPage":""},a().createElement(i.s,{onClose:()=>{console.log("close fancy window")},isProgressive:!0},a().createElement(o.W,{id:"CUSTOMERINFORMATION",name:"Customer Information",isHidden:O.hideCustomerInformation,footer:a().createElement(le,{valid:y.current.CUST_INFO,next:M,previous:D})},a().createElement(I,{updateStatus:T,resetNextClicked:M,rootValidation:y,rootUserChoices:t})),a().createElement(o.W,{id:"OIDCCONFIG",name:"OIDC Configuration",isHidden:O.hideOIDC,footer:a().createElement(le,{valid:y.current.OIDC_CONFIG,next:M,previous:D})},a().createElement(b,{updateStatus:T,resetNextClicked:M,rootValidation:y,rootUserChoices:t})),a().createElement(o.W,{id:"IMPORTFROMFILE",name:"Import config from file",isHidden:!(!O.hideOIDC&&!O.hideImportFromFile),footer:a().createElement(le,{valid:y.current.IMPORT_FROM_FILE,next:M,previous:D})},a().createElement(N,{updateStatus:T,resetNextClicked:M,rootValidation:y,rootUserChoices:t})),a().createElement(o.W,{id:"IMPORTFROMURL",name:"Import config from URL",isHidden:!(!O.hideOIDC&&!O.hideImportFromURL),footer:a().createElement(le,{valid:y.current.IMPORT_FROM_URL,next:M,previous:D})},a().createElement(_,{updateStatus:T,resetNextClicked:M,rootValidation:y,rootUserChoices:t})),a().createElement(o.W,{id:"SAMLCONFIG",name:"Saml Configuration",isHidden:O.hideSAML,footer:a().createElement(le,{valid:y.current.SAML_CONFIG,next:M,previous:D})},a().createElement(L,{updateStatus:T,resetNextClicked:M,rootValidation:y,rootUserChoices:t})),a().createElement(o.W,{name:"Import SAML from file",id:"IMPORTSAMLFROMFILE",isHidden:!(!O.hideSAML&&!O.hideImportFromFile),footer:a().createElement(le,{valid:y.current.IMPORT_FROM_FILE,next:M,previous:D})},a().createElement(U,{updateStatus:T,resetNextClicked:M,rootValidation:y,rootUserChoices:t})),a().createElement(o.W,{id:"IMPORTSAMLFROMURL",name:"Import SAML from URL",isHidden:!(!O.hideSAML&&!O.hideImportFromURL),footer:a().createElement(le,{valid:y.current.IMPORT_SAML_FROM_URL,next:M,previous:D})},a().createElement(P,{updateStatus:T,resetNextClicked:M,rootValidation:y,rootUserChoices:t})),a().createElement(o.W,{id:"FINALSTEP",name:"Final Steps",isHidden:O.hideFinish,footer:a().createElement(se,{userChoiceData:t.current.selections,previous:D})},a().createElement(G,{updateStatus:T,redirectDomain:t.current.selections.orgDomain}))))))};ue.propTypes={accessToken:v().string};const pe=ue;var he=n(8994),Ee=n(7334);const ve=()=>a().createElement("div",{className:"nonAdminDiv"},a().createElement(Ee.Ay,{className:"lockIcon"}),a().createElement(m.h,{headingLevel:"h2",size:"xl",className:"pf-v5-u-mt-lg"},"Access permissions needed"),a().createElement(s.E,{className:"pf-v5-u-mt-lg"},"To access Identity Provider Integration, ask your organization administrator(s) to adjust your permissions, or visit ",a().createElement(H.$n,{variant:"link",href:"/iam/my-user-access",target:"_blank",component:"a",isInline:!0},"My User Access")," to learn more about your permissions"),a().createElement(H.$n,{onClick:()=>{window.location.href="/iam/my-user-access"},className:"pf-v5-u-mt-lg"},"Return to home page")),fe=()=>{const e=(0,Y.A)();let t=null;const[n,i]=(0,r.useState)({adminUser:!1,selfServiceIDP:a().createElement(he.A,null)}),o=(0,me.useFlag)("iamconsole.IDPIntegration.enabled");return(0,r.useEffect)((()=>{e?.appAction?.("identity-provider-integration"),e.auth.getToken().then((e=>{t=e,(0,h.X2)(t)?(0,h.X2)(t)&&o&&i({adminUser:!0,selfServiceIDP:a().createElement(pe,{accessToken:t})}):i({adminUser:!1,selfServiceIDP:a().createElement(ve,null)})}))}),[]),a().createElement(a().Fragment,null,n.selfServiceIDP)}},4747:(e,t,n)=>{"use strict";function r(e){const t=e.split(".")[1].replace(/-/g,"+").replace(/_/g,"/"),n=JSON.parse(decodeURIComponent(window.atob(t).split("").map((e=>"%"+("00"+e.charCodeAt(0).toString(16)).slice(-2))).join("")));return n&&n.is_org_admin}function a(e,t,n,r){const a={};a[t]=e,r({...n,...a})}function i(e,t,n){let r=!1;const a={};return Object.keys(t).forEach((n=>{const i=e&&e[n],o=t[n].inputType,l=function(e,t,n){if(!e)return{status:"error",message:"This field can not be left empty"};let r,a;switch(t){case"GENERAL":a=/^[.@&]?[a-zA-Z0-9 ]+[ !.@&()]?[ a-zA-Z0-9!()]+/.test(e),r={status:a?"default":"error",message:a?"":"This text is invalid please check for uncommonly used characters"};break;case"DOMAIN":a=/(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]/g.test(e),r={status:a?"default":"error",message:a?"":"This field needs to be a valid URL"};break;default:r={status:"default",message:""}}return r}(i,o);"error"===l.status&&(r=!0),a[n]={inputType:o,status:l.status,message:l.message}})),n(a),r}n.d(t,{Gw:()=>o,J1:()=>l,SS:()=>i,X2:()=>r,Xr:()=>a});const o=e=>"prod"===e.getEnvironment()?"https://sso.redhat.com/auth/realms/redhat-external/":"https://sso.stage.redhat.com/auth/realms/redhat-external/",l=(e,t)=>o(e)+t},6882:()=>{},1902:()=>{},1662:()=>{},4895:()=>{},7302:()=>{},1036:()=>{},545:()=>{},5937:()=>{},5637:()=>{},1289:()=>{},6752:()=>{},5340:()=>{},9838:()=>{}}]);